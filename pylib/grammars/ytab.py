#!/usr/bin/env python
yysccsid = "@(#)yaccpar 1.8 (Berkeley) 01/20/91 (Python 2.0 02/05/12)";
#line 2 "CMDgram.y"
 # Reserved Word Definitions *
import astnodes
from astnodes import *
import torque_lex
from torque_lex import yylex
debug = 0                
        
#line 19 "CMDgram.y"
 # Constants and Identifier Definitions *
#line 33 "CMDgram.y"
 # Operator Definitions *
#line 15 "y.tab.py"
rwDEFINE=257
rwENDDEF=258
rwDECLARE=259
rwDECLARESINGLETON=260
rwBREAK=261
rwELSE=262
rwCONTINUE=263
rwGLOBAL=264
rwIF=265
rwNIL=266
rwRETURN=267
rwWHILE=268
rwDO=269
rwENDIF=270
rwENDWHILE=271
rwENDFOR=272
rwDEFAULT=273
rwFOR=274
rwDATABLOCK=275
rwSWITCH=276
rwCASE=277
rwSWITCHSTR=278
rwCASEOR=279
rwPACKAGE=280
rwNAMESPACE=281
rwCLASS=282
rwASSERT=283
ILLEGAL_TOKEN=284
CHRCONST=285
INTCONST=286
TTAG=287
VAR=288
IDENT=289
TYPE=290
DOCBLOCK=291
STRATOM=292
TAGATOM=293
FLTCONST=294
opINTNAME=295
opINTNAMER=296
opMINUSMINUS=297
opPLUSPLUS=298
STMT_SEP=299
opSHL=300
opSHR=301
opPLASN=302
opMIASN=303
opMLASN=304
opDVASN=305
opMODASN=306
opANDASN=307
opXORASN=308
opORASN=309
opSLASN=310
opSRASN=311
opCAT=312
opEQ=313
opNE=314
opGE=315
opLE=316
opAND=317
opOR=318
opSTREQ=319
opCOLONCOLON=320
opMDASN=321
opNDASN=322
opNTASN=323
opSTRNE=324
UNARY=325
YYERRCODE=256
yylhs = [                                               -1,
    0,    1,    1,    2,    2,    2,    2,    5,    6,    6,
    7,    7,    3,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    4,    4,   15,   15,   16,
   16,   11,   19,   19,   19,   19,   19,   19,   17,   17,
   21,   21,   22,   22,   23,   23,   23,   23,   25,   25,
   26,   26,   12,   12,   27,   27,   27,   28,   28,    8,
    8,    9,    9,   10,   10,   10,   10,   10,   10,   10,
   10,   14,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   13,   13,   13,   13,   13,   13,   13,   13,
   13,   13,   30,   30,   31,   31,   20,   20,   34,   34,
   34,   34,   34,   34,   34,   34,   34,   34,   34,   34,
   29,   29,   29,   29,   29,   29,   29,   29,   29,   29,
   35,   35,   35,   36,   36,   37,   37,   24,   24,   18,
   18,   38,   38,   38,   38,   38,   32,   32,   39,   33,
]
yylen = [                                                2,
    1,    0,    2,    1,    1,    1,    1,    6,    1,    2,
    0,    2,    1,    1,    1,    1,    1,    2,    2,    2,
    3,    2,    4,    6,    1,    8,   10,    0,    1,    1,
    3,   10,   10,    7,   12,    9,   10,    7,    0,    2,
    0,    1,    0,    2,    0,    1,    1,    2,    2,    3,
    3,    1,    7,    7,    4,    7,    5,    1,    3,    5,
    7,    5,    6,    9,    8,    8,    7,    8,    7,    7,
    6,    1,    1,    3,    3,    3,    3,    3,    3,    3,
    3,    3,    2,    2,    1,    5,    3,    3,    3,    3,
    3,    3,    3,    3,    3,    3,    3,    3,    3,    2,
    2,    1,    1,    1,    1,    1,    1,    1,    1,    1,
    4,    1,    3,    6,    3,    3,    1,    3,    1,    1,
    2,    2,    2,    2,    2,    2,    2,    2,    2,    2,
    1,    1,    1,    3,    6,    2,    5,    2,    3,    5,
    4,    6,    6,    4,    6,    0,    1,    1,    3,    1,
    2,    4,    5,    4,    7,    8,    1,    3,    0,    4,
]
yydefred = [                                             2,
    0,    0,    4,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,  159,  104,
    0,    0,    0,   25,  109,  102,  103,    0,    0,    0,
    0,    0,    3,    5,    6,    7,   13,   14,   15,   16,
   17,    0,    0,  133,    0,    0,  107,  112,  131,  132,
    0,  117,    0,    0,    0,   18,   19,    0,  105,   85,
   20,    0,   73,    0,   11,   52,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  120,  119,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  136,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   22,    0,  138,    0,    0,    0,    0,    0,
    0,   21,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,   74,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,  115,  116,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,   30,
    0,    0,    0,  118,    0,    0,    0,    0,    0,    0,
   51,   12,    0,    0,    0,    0,    0,    0,    0,    9,
    0,  144,    0,  160,    0,   23,    0,    0,    0,  141,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   62,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   10,    0,    0,    0,    0,  137,
    0,    0,    0,    0,    0,  140,   11,   31,    0,    0,
   40,    0,    0,    0,    0,   63,   71,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    8,  145,   24,
    0,  142,  143,  114,    0,    0,    0,    0,    0,    0,
   61,   70,   69,    0,   67,    0,    0,    0,    0,    0,
    0,   53,   54,   26,   11,    0,    0,    0,   68,   66,
   65,    0,    0,    0,    0,    0,  150,    0,   11,    0,
    0,    0,    0,    0,    0,    0,   64,    0,    0,    0,
    0,    0,  151,    0,    0,   27,    0,    0,   49,   33,
    0,   37,    0,    0,    0,    0,    0,   32,    0,   57,
    0,   50,  154,  152,    0,    0,    0,   11,   35,    0,
  153,    0,    0,    0,    0,  155,    0,  156,
]
yydgoto = [                                              1,
    2,   33,   66,   35,   36,  211,  134,   37,   38,   39,
   40,   41,   42,   43,  191,  192,  231,  322,   44,   54,
  197,  263,  324,  159,  325,   67,  276,  301,   63,   46,
   47,  157,   48,   90,   49,   50,  160,  317,   74,
]
yysindex = [                                             0,
    0, 3442,    0, -249,  -34,  -34,    7,   21,   44, 3860,
   46, 3550,   50, -173,  110,  114, -134,  116,    0,    0,
   97,  240,  -33,    0,    0,    0,    0, 4232, 4232, 4232,
 4232, 4232,    0,    0,    0,    0,    0,    0,    0,    0,
    0, 2772,  103,    0,    0,  384,    0,    0,    0,    0,
  -31,    0, 4232,  127,  133,    0,    0, 4232,    0,    0,
    0, 1371,    0, 4232,    0,    0,  -90, 3880,  137, 4232,
 4232,   57, 4232, -100, 4232, 4232,    0,    0, 4232, 4232,
 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232,    0,
 4232,  -98,  -43,  -43, 1398,  -43,  -43, 4232, 4232, 4232,
 4232, 4232, 4232,  -97, 4232, 4232, 4232, 4232,  -34,  -34,
 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232, 4232,
 4232, 4232,    0, 3919,    0,  -99,  -95, 1517, 3901, 4232,
 1554,    0, 1682, 3587,  155, 3937, 1715,  -88, 1838, 1865,
  -55,  162,  -74, 1344, 2772, 2772, 2772, 2772, 2772, 2772,
 2772, 2772, 2772, 2772, 2772, 2772,  120, 2772,  168,  174,
  176,    0,  123,  123,  -43,  -43, 1151, 1151,   -8, 1754,
  303,  -43, 2084,    0,    0,   32,   32,  329, 2995, 2995,
 1151, 1151, 2951, 2915,  329, 1800,  329, 4232, 2772,    0,
  179,  184,  190,    0, 4232, 2772,  177,  177, 3550, 3550,
    0,    0, 4232, 3975, 1898, 3955,  177,  125,  131,    0,
 -108,    0,  -35,    0, 4232,    0, 4232, 3159, 4232,    0,
 4232, 4232, 4232, 4232,  -25,  135,  -51,  -99,  157,  -29,
  215,  215,    6,    0, 1999, 3550, 2043, 4025, 4091, 2181,
  223,  -12,  -12,  211,    0,  230, 2208, 2772, 4232,    0,
 2772,  234,  235,  124, 2888,    0,    0,    0,  247,  177,
    0, 4232,  250,  252, 3550,    0,    0, 3550, 3550, 2241,
 3550, 2331, 4212,  188, 4232,  172,  187,    0,    0,    0,
 2772,    0,    0,    0, 3623,  191,  215,  168,  192,  193,
    0,    0,    0, 3550,    0, 3550, 3550, 2364, -230, 2772,
  -46,    0,    0,    0,    0,  261,  195,  195,    0,    0,
    0, 3550,  256,  -27,   24, -104,    0, 4232,    0, 3824,
  203,  195,  273,  210, -211,  212,    0, 4232, 4232, 4232,
  -23,  277,    0, 2772, 3491,    0,  195, -211,    0,    0,
  279,    0, 2391, 2424,  128, 4232, 4232,    0,  281,    0,
  217,    0,    0,    0,  282, 2529,  130,    0,    0, 4232,
    0,  293, 3763, 2574, 4232,    0, 2707,    0,
]
yyrindex = [                                             0,
    0,  357,    0,    0,    0,    0, 2817,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 2857,  406,  460,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0, 2734,  550,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  317,    0,  777,  889,    0,  916, 1061,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  323,    0,    0,    3,    3,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,  -30,  579, 1087, 1577, 1638, 1677,
 2050, 2144, 2503, 2505, 2653,  139,    0,    2,  326,    0,
    0,    0, 3061, 3199, 1200, 1227,  -36, 2880,  262, 1846,
 1696, 1270, 1879,    0,    0, 3240, 3288, 2289,  988, 1509,
 3378, 3484, 1290,  -28, 3084,    0, 3366,    0, 2658,    0,
    0,  327,    0,    0,  280,  138,   41,   41,    0,    0,
    0,    0,    0,    0,    0,    0,  336,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  604,    0,    0,
  317,  317,    0,    0,    0,    0,    0,  323,    0,    0,
  337,  337,  148,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  143,    0,    0,
   26,    0,    0,    0,  945,    0,    0,    0,    0,   41,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
 3057,    0,    0,    0,    0,    0,  337,  338,  706,  748,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  -40,
    0,    0,    0,    0,    0,    0,  255,  255,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
  848,  257,    0,    0,  259,    0,    0,    0,    0,    0,
    0,    0,    0,  -38,  260,    0,  255,  264,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,  265,    0,    0,    0,    0,    0,
]
yygindex = [                                             0,
    0,    0,   -1,  -91,    0,    0, -144,    0,    0,    0,
    0,    0,   23,    0,  153,    0,  -41,   92,   22,    9,
  -94, -195, -266, -147,   70,  983, -218,    0,   -2,    0,
    0, -184,  319,  -42,    0,    0, -149, -260,    0,
]
YYTABLESIZE=4526
yytable = [                                             45,
   34,   87,  104,  125,   87,   53,   91,   87,  126,   45,
  134,  319,   93,  134,   55,   93,  244,   58,  219,   59,
  332,   87,   87,   87,  277,   87,   87,  134,  134,   93,
   93,  222,   62,  329,   93,  198,  264,  346,  254,   51,
  225,  326,  148,   41,  313,  148,   41,    5,    6,  210,
   93,   94,   95,   96,   97,  333,   87,   87,  314,  315,
   41,  333,  134,  330,   93,   56,  149,  347,  107,  149,
  351,  252,  253,  100,   98,  128,   99,  104,  101,   57,
  131,   39,  223,   58,   39,   64,  133,   87,   87,   68,
  137,  306,  139,  140,  134,  142,   93,  144,  145,  256,
  229,  146,  147,  148,  149,  150,  151,  152,  153,  154,
  155,  156,  285,  158,  288,   69,  350,  174,  175,  245,
  163,  164,  165,  166,  167,  168,  148,  170,  171,  172,
  173,   45,  202,  176,  177,  178,  179,  180,  181,  182,
  183,  184,  185,  186,  187,  345,  189,   60,    4,   70,
  149,  196,  196,   71,   72,   73,  232,   75,  205,  107,
  320,  123,  357,  217,  100,  241,  129,  217,  104,  101,
  313,  217,  130,  217,  335,  250,  138,  135,   42,  141,
   60,   42,  157,   19,  314,  315,  158,   60,  190,   60,
  161,  169,   60,  193,  203,   42,   45,   45,  107,  106,
  207,    4,  212,  100,   98,  213,   99,  104,  101,  214,
  158,  219,  218,  363,  220,  221,  284,  196,  287,  226,
  355,  102,  362,  103,  121,  235,  237,  227,  240,  228,
   42,  157,  318,   45,  230,  158,  258,  247,   58,  248,
   59,  251,   87,  158,  158,  156,  255,  242,  134,  260,
   93,  109,  110,  243,   52,  108,  246,  257,  262,  261,
  270,  272,   45,  274,  275,   45,   45,  265,   45,  278,
  279,  281,   60,   60,  282,  283,   87,   87,   87,   87,
   87,   87,   45,  202,  158,  105,   92,  286,  127,   93,
  289,   45,  290,   45,   45,  298,  302,  300,  113,  113,
   76,  321,  113,  113,  113,  113,  113,  113,  113,   45,
  299,  303,  331,  305,  307,  308,  328,   45,  202,  113,
  113,  113,  113,  113,  113,  337,  109,  110,  323,  323,
   89,  339,   45,  202,  340,  348,  342,  352,  358,  107,
  334,  359,  360,  323,  100,   98,  341,   99,  104,  101,
  343,  344,  156,  365,  113,  113,    1,  146,  323,  341,
   45,  202,  102,   28,  103,  107,  147,   29,  356,  156,
  100,   98,   41,   99,  104,  101,   39,   43,   44,   45,
  259,   46,  364,   47,   55,  113,  113,  367,   48,   56,
  316,  338,  143,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   60,   60,    0,   60,   60,   60,    0,
   60,    0,   60,    0,   60,   60,   60,  109,  110,    0,
   60,   60,   60,   60,   60,   60,    0,   60,    0,    0,
   60,   60,    0,   60,   60,   60,   60,    0,   60,   60,
   60,   60,  110,  110,  124,    0,  110,  110,  110,  110,
  110,  110,  110,    5,    6,    0,  109,  110,    0,    0,
    0,  111,  112,  110,  110,  110,    0,  110,  110,  313,
    0,    0,    0,  113,  114,  115,  116,  117,  118,  119,
  120,    0,    0,  314,  315,  122,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  108,  108,  110,  110,
  108,  108,  108,  108,  108,  108,  108,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  108,  108,  108,
    0,  108,  108,    0,    0,    0,    0,    0,    0,  110,
  110,    0,    0,    0,    0,    0,   77,   78,    0,    0,
  113,   79,   80,   81,   82,   83,   84,   85,   86,   87,
   88,    0,  108,  108,    0,    0,  113,  113,  113,  113,
    0,  113,  113,  113,  113,  113,  113,  113,  113,  113,
  113,  113,  113,  113,  113,  113,  113,  113,  113,  113,
  113,    0,    0,  108,  108,  113,  106,  106,    0,    0,
  106,  106,  106,  106,  106,  106,  106,  109,  110,    0,
    0,    0,  111,  112,    0,    0,    0,  106,  106,  106,
    0,  106,  106,    0,  113,  114,  115,  116,  117,  121,
    0,  120,  121,  109,  110,    0,  122,    0,  111,  112,
    0,    0,    0,    0,    0,    0,  121,  121,    0,    0,
  111,  111,  106,  106,  111,  111,  111,  111,  111,  111,
  111,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  111,  111,  111,    0,  111,  111,    0,    0,    0,
    0,  121,    0,  106,  106,    0,    0,    0,    0,    0,
   77,   78,    0,    0,  110,   79,   80,   81,   82,   83,
   84,   85,   86,   87,   88,    0,  111,  111,    0,    0,
  110,  110,    0,  121,    0,  110,  110,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  110,  110,  110,
  110,  110,  110,  110,  110,    0,    0,  111,  111,  110,
    0,    0,    0,    0,    0,    0,    0,    0,  108,    0,
    0,    0,   34,   34,    0,    0,   34,   34,   34,   34,
   34,   34,   34,    0,  108,  108,    0,    0,    0,  108,
  108,    0,    0,   34,   34,   34,    0,   34,   34,    0,
    0,  108,  108,  108,  108,  108,  108,  108,  108,    0,
    0,    0,    0,  108,   38,   38,    0,    0,   38,   38,
   38,   38,   38,   38,   38,    0,    0,    0,   34,   34,
    0,    0,    0,    0,    0,   38,   38,   38,    0,   38,
   38,    0,    0,   83,   83,    0,    0,   83,   83,   83,
   83,   83,    0,   83,    0,    0,    0,    0,  106,   34,
   34,    0,    0,    0,   83,   83,   83,    0,   83,   83,
   38,   38,    0,    0,  106,  106,    0,    0,    0,  106,
  106,    0,    0,    0,    0,    0,    0,  121,    0,    0,
    0,  106,  106,  106,  106,  106,  106,  106,  106,   83,
   83,   38,   38,  106,    0,    0,    0,    0,    0,    0,
    0,    0,  111,    0,   36,   36,    0,    0,   36,   36,
   36,   36,   36,   36,   36,    0,    0,    0,  111,  111,
   83,   83,    0,  111,  111,   36,   36,   36,    0,   36,
   36,    0,    0,    0,    0,  111,  111,  111,  111,  111,
  111,  111,  111,    0,    0,   84,   84,  111,    0,   84,
   84,   84,   84,   84,    0,   84,    0,    0,    0,    0,
   36,   36,    0,    0,    0,    0,   84,   84,   84,    0,
   84,   84,  101,  101,    0,    0,  101,  101,  101,  101,
  101,    0,  101,    0,    0,    0,    0,    0,    0,    0,
    0,   36,   36,  101,  101,  101,    0,  101,  101,    0,
    0,   84,   84,    0,   34,   86,    0,    0,   86,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   34,   34,   86,   86,    0,   34,   34,   86,  101,  101,
    0,    0,   84,   84,    0,    0,    0,   34,   34,   34,
   34,   34,   34,   34,   34,   91,   38,    0,   91,   34,
    0,   91,    0,    0,    0,    0,    0,   86,    0,  101,
  101,    0,   38,   38,    0,   91,   91,   38,   38,    0,
   91,    0,    0,    0,    0,   83,    0,    0,    0,   38,
   38,   38,   38,   38,   38,   38,   38,    0,    0,   86,
    0,   38,    0,    0,    0,    0,   83,   83,    0,    0,
   91,   91,    0,    0,    0,    0,    0,    0,   83,   83,
   83,   83,   83,   83,   83,   83,    0,  100,  100,    0,
   83,  100,  100,  100,  100,  100,    0,  100,    0,    0,
    0,   91,   91,    0,    0,    0,    0,    0,  100,  100,
  100,    0,  100,  100,    0,    0,   36,  122,    0,    0,
  122,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   36,   36,  122,  122,    0,   36,   36,    0,
    0,    0,    0,  100,  100,    0,    0,    0,    0,   36,
   36,   36,   36,   36,   36,   36,   36,   84,    0,    0,
    0,   36,    0,    0,    0,    0,    0,    0,    0,  122,
    0,  233,  234,    0,  100,  100,    0,  107,   84,   84,
    0,    0,  100,   98,  101,   99,  104,  101,    0,    0,
   84,   84,   84,   84,   84,   84,   84,   84,    0,    0,
    0,  122,   84,    0,    0,  101,  101,    0,  267,    0,
    0,    0,    0,   86,    0,    0,    0,  101,  101,  101,
  101,  101,  101,  101,  101,    0,   81,   81,    0,  101,
   81,   81,   81,   81,   81,    0,   81,  291,    0,    0,
  292,  293,    0,  295,    0,    0,    0,   81,   81,   81,
    0,   81,   81,   82,   82,    0,   91,   82,   82,   82,
   82,   82,    0,   82,    0,    0,  309,    0,  310,  311,
    0,    0,    0,    0,   82,   82,   82,    0,   82,   82,
    0,    0,   81,   81,  327,    0,    0,    0,    0,    0,
   91,   91,    0,    0,   91,   91,   76,   76,    0,    0,
   76,   76,   76,   76,   76,    0,   76,    0,    0,   82,
   82,    0,    0,   81,   81,    0,    0,   76,   76,   76,
   96,   76,   76,   96,    0,    0,    0,    0,    0,  100,
    0,    0,    0,    0,    0,    0,    0,   96,   96,    0,
   82,   82,   96,    0,    0,    0,    0,    0,    0,    0,
  100,  100,   76,   76,    0,  122,    0,    0,    0,    0,
    0,    0,  100,  100,  100,  100,  100,  100,  100,  100,
  107,  106,   96,    0,  100,  100,   98,  215,   99,  104,
  101,    0,    0,   76,   76,    0,    0,    0,    0,    0,
    0,    0,  216,  102,    0,  103,  121,  107,  106,    0,
    0,    0,  100,   98,   96,   99,  104,  101,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  132,
  102,    0,  103,  121,  107,  106,    0,  108,  162,  100,
   98,    0,   99,  104,  101,  109,  110,    0,    0,    0,
  111,  112,    0,    0,    0,    0,    0,  102,    0,  103,
  121,    0,  113,    0,  108,    0,    0,  105,    0,  120,
    0,    0,    0,    0,  122,    0,    0,    0,   81,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,  108,    0,    0,  105,    0,    0,    0,    0,   81,
   81,    0,    0,    0,    0,   82,    0,    0,    0,    0,
    0,   81,   81,   81,   81,   81,   81,   81,   81,    0,
    0,  105,    0,   81,    0,    0,   82,   82,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   82,   82,
   82,   82,   82,   82,   82,   82,   92,    0,   76,   92,
   82,    0,   92,  107,  106,    0,    0,  194,  100,   98,
    0,   99,  104,  101,    0,    0,   92,   92,   96,   76,
   76,   92,    0,    0,    0,    0,  102,    0,  103,  121,
    0,   76,   76,   76,   76,   76,   76,   76,   76,    0,
  107,  106,    0,   76,  199,  100,   98,    0,   99,  104,
  101,   92,   92,    0,    0,    0,   96,   96,    0,    0,
  108,    0,    0,  102,    0,  103,  121,  123,    0,    0,
  123,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   92,   92,  123,  123,    0,    0,  109,  110,
  105,    0,    0,  111,  112,    0,    0,  108,    0,    0,
    0,    0,    0,    0,    0,  113,  114,  115,  116,  117,
  118,  119,  120,    0,    0,  109,  110,  122,    0,  123,
  111,  112,    0,    0,    0,    0,    0,  105,  124,    0,
    0,  124,  113,  114,  115,  116,  117,  118,  119,  120,
    0,    0,  109,  110,  122,  124,  124,  111,  112,    0,
    0,  123,    0,    0,    0,    0,    0,    0,    0,  113,
  114,  115,  116,  117,  118,  119,  120,  125,  107,  106,
  125,  122,  200,  100,   98,    0,   99,  104,  101,    0,
  124,    0,    0,   77,  125,  125,   77,    0,    0,   77,
    0,  102,    0,  103,  121,    0,    0,    0,    0,    0,
    0,  107,  106,   77,   77,    0,  100,   98,   77,   99,
  104,  101,  124,    0,    0,    0,    0,    0,    0,  125,
    0,    0,    0,  206,  102,  108,  103,  121,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   92,   77,   77,
  107,  106,    0,    0,    0,  100,   98,    0,   99,  104,
  101,  125,    0,    0,    0,  105,    0,    0,  108,    0,
    0,  109,  110,  102,    0,  103,  111,  112,    0,   77,
   77,   92,   92,    0,    0,   92,   92,    0,  113,  114,
  115,  116,  117,  118,  119,  120,  107,  106,  105,    0,
  122,  100,   98,    0,   99,  104,  101,  108,  109,  110,
    0,    0,    0,  111,  112,  123,    0,  224,    0,  102,
    0,  103,  121,    0,    0,  113,  114,  115,  116,  117,
  118,  119,  120,    0,  107,  106,    0,  122,  208,  100,
   98,    0,   99,  104,  101,    0,   78,    0,    0,   78,
    0,    0,    0,  108,    0,    0,    0,  102,    0,  103,
  121,  107,  106,   78,   78,  209,  100,   98,   78,   99,
  104,  101,    0,    0,    0,    0,  124,    0,    0,   75,
    0,    0,   75,  105,  102,    0,  103,  121,    0,    0,
    0,  108,    0,    0,  107,  106,   75,   75,   78,  100,
   98,   75,   99,  104,  101,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  125,  238,  102,  108,  103,
  121,  105,    0,    0,    0,    0,    0,    0,    0,   78,
   78,   75,   75,    0,   77,    0,  109,  110,    0,    0,
    0,  111,  112,    0,    0,    0,    0,    0,  105,    0,
    0,  108,    0,  113,  114,  115,  116,  117,  118,  119,
  120,    0,   75,   75,    0,  122,    0,    0,    0,  109,
  110,    0,   77,   77,  111,  112,    0,    0,    0,    0,
    0,  105,    0,    0,    0,    0,  113,  114,  115,  116,
  117,  118,  119,  120,    0,  107,  106,    0,  122,  266,
  100,   98,    0,   99,  104,  101,    0,    0,  109,  110,
    0,    0,    0,  111,  112,    0,    0,    0,  102,    0,
  103,  121,    0,    0,    0,  113,  114,  115,  116,  117,
    0,    0,  120,    0,    0,    0,    0,  122,    0,  107,
  106,    0,    0,  268,  100,   98,    0,   99,  104,  101,
  126,    0,  108,  126,  109,  110,    0,    0,    0,  111,
  112,    0,  102,    0,  103,  121,    0,  126,  126,    0,
    0,  113,  114,  115,  116,  117,  118,  119,  120,    0,
  107,  106,  105,  122,   78,  100,   98,    0,   99,  104,
  101,    0,  109,  110,    0,    0,  108,  111,  112,    0,
    0,    0,  126,  102,    0,  103,    0,    0,    0,  113,
  114,  115,  116,  117,  118,  119,  120,   75,    0,  109,
  110,  122,   78,   78,  111,  112,  105,    0,    0,    0,
    0,    0,    0,    0,  126,    0,  113,  114,  115,  116,
  117,  118,  119,  120,  127,    0,    0,  127,  122,    0,
    0,    0,  109,  110,    0,   75,   75,  111,  112,    0,
    0,  127,  127,    0,    0,    0,    0,    0,    0,  113,
  114,  115,  116,  117,  118,  119,  120,  107,  106,    0,
    0,  122,  100,   98,    0,   99,  104,  101,    0,    0,
    0,    0,    0,    0,    0,    0,  127,    0,    0,  273,
  102,    0,  103,  121,  107,  106,    0,    0,    0,  100,
   98,    0,   99,  104,  101,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,  280,  102,  127,  103,
  121,    0,    0,    0,  108,    0,    0,  107,  106,    0,
    0,  294,  100,   98,    0,   99,  104,  101,    0,    0,
    0,    0,    0,  109,  110,    0,    0,    0,  111,  112,
  102,  108,  103,  121,  105,    0,    0,    0,    0,    0,
  113,  114,  115,  116,  117,  118,  119,  120,    0,    0,
    0,    0,  122,    0,    0,    0,   99,    0,  126,   99,
    0,  105,   99,    0,  108,    0,    0,  109,  110,    0,
    0,    0,  111,  112,    0,    0,   99,   99,   99,    0,
   99,   99,    0,    0,  113,  114,  115,  116,  117,  118,
  119,  120,    0,    0,  105,    0,  122,  107,  106,    0,
    0,  296,  100,   98,    0,   99,  104,  101,  109,  110,
    0,   99,   99,  111,  112,    0,    0,    0,    0,    0,
  102,    0,  103,  121,    0,  113,  114,  115,  116,  117,
  107,  106,  120,    0,  312,  100,   98,  122,   99,  104,
  101,    0,   99,   99,    0,    0,    0,    0,    0,    0,
    0,    0,  127,  102,  108,  103,  121,  107,  106,    0,
    0,    0,  100,   98,    0,   99,  104,  101,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,  353,
  102,    0,  103,  121,  105,    0,    0,  108,    0,    0,
  107,  106,    0,    0,    0,  100,   98,    0,   99,  104,
  101,    0,    0,    0,    0,  109,  110,    0,    0,    0,
  111,  112,  354,  102,  108,  103,  121,  105,    0,    0,
    0,    0,  113,  114,  115,  116,  117,  118,  119,  120,
    0,    0,  109,  110,  122,    0,    0,  111,  112,    0,
    0,    0,    0,    0,  105,    0,    0,  108,    0,  113,
  114,  115,  116,  117,  118,  119,  120,    0,    0,    0,
    0,  122,    0,    0,    0,  109,  110,    0,    0,    0,
  111,  112,    0,  128,    0,  129,  128,  105,  129,    0,
    0,    0,  113,  114,  115,  116,  117,  118,  119,  120,
  128,  128,  129,  129,  122,  107,  106,   99,    0,    0,
  100,   98,    0,   99,  104,  101,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  361,  102,    0,
  103,  121,    0,    0,    0,  128,    0,  129,    0,    0,
   99,   99,   99,   99,   99,   99,   99,   99,    0,    0,
  107,  106,   99,    0,    0,  100,   98,    0,   99,  104,
  101,    0,  108,    0,    0,  109,  110,  128,    0,  129,
  111,  112,  366,  102,    0,  103,  121,    0,    0,    0,
    0,    0,  113,  114,  115,  116,  117,  118,  119,  120,
    0,    0,  105,    0,  122,    0,    0,    0,  109,  110,
    0,    0,    0,  111,  112,    0,    0,  108,    0,    0,
    0,    0,    0,    0,    0,  113,  114,  115,  116,  117,
  118,  119,  120,    0,    0,  109,  110,  122,    0,    0,
  111,  112,    0,  130,    0,    0,  130,  105,  139,    0,
    0,  139,  113,  114,  115,  116,  117,  118,  119,  120,
  130,  130,    0,    0,  122,  139,  139,    0,  109,  110,
    0,    0,    0,  111,  112,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  113,  114,  115,  116,  117,
  118,  119,  120,  107,  106,  130,    0,  122,  100,   98,
  139,   99,  104,  101,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,  368,  102,    0,  103,  121,
   73,   73,    0,    0,    0,   73,   73,  130,   73,   73,
   73,  128,  139,  129,    0,    0,    0,    0,    0,    0,
    0,    0,   72,   73,    0,   73,   73,    0,    0,    0,
  108,    0,    0,    0,    0,    0,    0,    0,  107,  106,
    0,    0,    0,  100,   98,    0,   99,  104,  101,    0,
    0,    0,    0,  109,  110,    0,    0,   73,  111,  112,
  105,  102,    0,  103,  121,    0,    0,    0,    0,    0,
  113,  114,  115,  116,  117,  118,  119,  120,    0,    0,
    0,    0,  122,  105,  105,    0,    0,   73,  105,  105,
    0,  105,  105,  105,    0,  108,    0,    0,  109,  110,
    0,    0,    0,  111,  112,    0,  105,    0,  105,  105,
    0,    0,    0,    0,    0,  113,  114,  115,  116,  117,
  118,  119,  120,   85,   85,  105,    0,  122,   85,   85,
    0,   85,   85,   85,    0,    0,    0,    0,    0,    0,
  105,    0,    0,    0,    0,    0,   85,   88,   85,   85,
   88,    0,    0,   88,  107,  106,    0,    0,    0,  100,
   98,  130,   99,  104,  101,    0,  139,   88,   88,   88,
  105,   88,   88,    0,    0,    0,    0,  102,    0,  103,
   85,  107,  106,    0,    0,    0,  100,   98,    0,   99,
  104,  101,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,   88,   88,  102,    0,  103,    0,    0,    0,
   85,  108,    0,    0,    0,    0,    0,  107,  106,    0,
    0,    0,  100,   98,    0,   99,  104,  101,    0,    0,
    0,  109,  110,   88,   88,    0,  111,  112,  108,    0,
  102,  105,  103,    0,    0,    0,    0,    0,  113,  114,
  115,  116,  117,  118,  119,  120,    0,    0,   73,   73,
  122,  107,    0,   73,   73,    0,  100,   98,  105,   99,
  104,  101,    0,    0,  108,   73,   73,   73,   73,   73,
   73,   73,   73,    0,  102,    0,  103,   73,    0,    0,
    0,    0,    0,    0,    0,    0,  109,  110,    0,    0,
    0,  111,  112,    0,  105,    0,    0,    0,    0,    0,
    0,    0,    0,  113,  114,  115,  116,  117,  118,  119,
  120,    0,    0,    0,    0,  122,    0,  135,   79,    0,
  135,   79,    0,   79,   79,   79,    0,    0,    0,    0,
    0,  105,  105,    0,  135,  135,  105,  105,   79,   79,
   79,   97,   79,   79,   97,    0,    0,   97,  105,  105,
  105,  105,  105,  105,  105,  105,    0,    0,    0,    0,
  105,   97,   97,   97,    0,   97,   97,    0,    0,  135,
    0,   85,   85,   79,   79,    0,   85,   85,   88,    0,
    0,    0,    0,    0,    0,    0,    0,    0,   85,   85,
   85,   85,   85,   85,   85,   85,   97,   97,    0,    0,
   85,  135,  109,  110,   79,   79,    0,  111,  112,    0,
    0,    0,   88,   88,   88,   88,   88,   88,    0,  113,
  114,  115,  116,  117,  118,  119,  120,   97,   97,  109,
  110,  122,    0,    0,  111,  112,    0,    0,    0,  249,
    0,    0,    0,    0,    0,    0,  113,  114,  115,  116,
  117,  118,    0,  120,    0,    0,   80,    0,  122,   80,
    0,   80,   80,   80,    0,  109,  110,    0,    0,    0,
  111,  112,    0,    0,    0,    0,   80,   80,   80,    0,
   80,   80,  113,  114,  115,  116,  117,    0,    0,  120,
    0,    0,    0,    0,  122,    0,    0,   94,    0,    0,
   94,    0,    0,   94,    0,    0,    0,    0,    0,  109,
  110,   80,   80,    0,  111,  112,    0,   94,   94,   94,
    0,   94,   94,    0,    0,    0,  113,    0,    0,  116,
  117,    0,    0,  120,    0,    0,    0,    0,  122,    0,
    0,    0,   80,   80,    0,   95,    0,    0,   95,    0,
    0,   95,   94,   94,    0,  135,    0,    0,    0,   79,
    0,    0,    0,    0,    0,   95,   95,   95,    0,   95,
   95,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   79,   79,   97,   94,   94,    0,    0,    0,    0,    0,
    0,    0,   79,   79,   79,   79,   79,   79,   79,   79,
   95,   95,    0,    0,   79,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   97,   97,   97,   97,   97,
   97,   97,   97,   98,    0,    0,   98,   97,    0,   98,
    0,   95,   95,    0,    0,   89,    0,    0,   89,    0,
    0,   89,    0,   98,   98,   98,    0,   98,   98,    0,
    0,    0,    0,    0,    0,   89,   89,   89,    0,   89,
   89,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   77,   78,    0,   98,   98,
   79,   80,   81,   82,   83,   84,   85,   86,   87,   88,
   89,   89,    0,    0,   32,    0,    0,   80,    0,    0,
    0,   30,    0,   29,    0,    0,   28,    0,    0,   98,
   98,    0,    0,    0,    0,    0,    0,    0,   80,   80,
    0,   89,   89,    0,    0,    0,    0,    0,    0,    0,
   80,   80,   80,   80,   80,   80,   80,   80,   94,    0,
    0,   90,   80,   32,   90,    0,    0,   90,    0,    0,
   30,    0,   29,    0,    0,   28,    0,    0,    0,   94,
   94,   90,   90,   90,    0,   90,   90,    0,    0,    0,
    0,   94,   94,   94,   94,   94,   94,   94,   94,    0,
    0,    0,    0,   94,    0,    0,   95,   31,    0,    0,
    0,    0,    0,    0,    0,    0,   90,   90,    0,    0,
    0,    0,   32,    0,    0,    0,    0,   95,   95,   30,
    0,   29,    0,    0,   28,    0,    0,    0,    0,   95,
   95,   95,   95,   95,   95,   95,   95,   90,   90,    0,
    0,   95,    0,    0,    0,    0,   31,    0,    0,   32,
    0,    0,    0,    0,    0,    0,   30,    0,   29,    0,
    0,   28,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,   98,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   32,   89,    0,    0,    0,
    0,    0,   30,    0,   29,    0,    0,   28,    0,    0,
    0,    0,   65,    0,    0,   31,    0,   98,   98,   98,
   98,   98,   98,   98,   98,    0,    0,    0,    0,   98,
   89,   89,   89,   89,   89,   89,    0,    3,    4,    0,
    5,    6,    7,    0,    8,    0,    9,    0,   10,   11,
   12,  201,   31,    0,    0,   13,   14,   15,    0,   16,
    0,   17,    0,    0,   18,   19,    0,   20,   21,   22,
   23,    0,   24,   25,   26,   27,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,  304,   31,    5,
    6,    7,    0,    8,    0,    9,    0,   10,   11,   12,
    0,    0,   90,  349,   13,   14,   15,  275,   16,    0,
    0,    0,    0,   18,   19,    0,   20,   21,   22,   23,
    0,   24,   25,   26,   27,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,   32,   90,   90,   90,   90,
   90,   90,   30,    0,   29,    0,    0,   28,    5,    6,
    7,    0,    8,    0,    9,    0,   10,   11,   12,    0,
    0,    0,    0,   13,   14,   15,    0,   16,    0,    0,
    0,    0,   18,   19,    0,   20,   21,   22,   23,    0,
   24,   25,   26,   27,    0,    5,    6,    7,    0,    8,
    0,    9,    0,   10,   11,   12,   32,    0,    0,    0,
   13,   14,   15,   30,   16,   29,    0,    0,   28,   18,
   19,    0,   20,   21,   22,   23,    0,   24,   25,   26,
   27,    5,    6,    7,    0,    8,    0,    9,   31,   10,
   11,   12,   32,    0,    0,    0,   13,   14,   15,   30,
   16,   29,    0,    0,   28,   18,   19,    0,   20,   21,
   22,   23,   32,   24,   25,   26,   27,    0,   61,   30,
    0,   29,    0,    0,   28,    0,    0,    0,    0,    0,
    0,    0,    0,   32,    0,    0,    0,    0,  136,    0,
   30,    0,   29,    0,    0,   28,    0,    0,  336,   31,
    0,   32,    0,    0,    0,    0,    0,    0,   30,    0,
   29,    0,    0,   28,    0,    0,    0,    0,    0,   32,
    0,    0,    0,    0,    0,    0,   30,    0,   29,    0,
    0,   28,    0,    0,    0,   31,    0,   32,    0,    0,
    0,  195,    0,    0,   30,  204,   29,    0,    0,   28,
    0,    0,    0,    0,    0,   31,    0,   32,    0,    0,
    0,    0,    0,  239,   30,  236,   29,    0,    0,   28,
    0,    5,    6,    7,    0,    8,   31,    9,    0,   10,
   11,   12,    0,    0,    0,    0,   13,   14,   15,    0,
   16,  188,    0,    0,   31,   18,   19,    0,   20,   21,
   22,   23,    0,   24,   25,   26,   27,   32,    0,    0,
    0,    0,   31,    0,   30,  269,   29,    0,    0,   28,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
   31,    0,    5,    6,    7,    0,    8,    0,    9,    0,
   10,   11,   12,    0,    0,    0,    0,   13,   14,   15,
   31,   16,    0,    0,    0,    0,   18,   19,    0,   20,
   21,   22,   23,    0,   24,   25,   26,   27,    5,    6,
   59,    0,    0,   32,    0,    0,    0,    0,    0,    0,
   30,  271,   29,    0,    0,   28,    0,    0,    5,    6,
   59,    0,   18,   19,    0,   20,   60,   22,   23,    0,
   31,   25,   26,   27,    0,    0,    0,    0,    0,    5,
    6,   59,   18,   19,    0,   20,   60,   22,   23,    0,
    0,   25,   26,   27,    0,    0,    0,    5,    6,   59,
    0,    0,    0,   18,   19,    0,   20,   60,   22,   23,
    0,    0,   25,   26,   27,    5,    6,   59,    0,    0,
    0,   18,   19,    0,   20,   60,   22,   23,    0,    0,
   25,   26,   27,    5,    6,   59,   31,    0,    0,   18,
   19,    0,   20,   60,   22,   23,    0,    0,   25,   26,
   27,    0,    0,    5,    6,   59,    0,   18,   19,    0,
   20,   60,   22,   23,   32,    0,   25,   26,   27,    0,
    0,   30,  297,   29,    0,    0,   28,   18,   19,    0,
   20,   60,   22,   23,   32,    0,   25,   26,   27,    0,
    0,   30,    0,   29,    0,    0,   28,    0,    0,    0,
    0,    0,    0,    5,    6,   59,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   18,   19,    0,
   20,   60,   22,   23,    0,    0,   25,   26,   27,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,   31,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    5,
    6,   59,    0,    0,    0,    0,    0,   31,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,   18,   19,    0,   20,   60,   22,   23,
    0,    0,   25,   26,   27,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    5,    6,   59,    0,    0,    0,    0,    0,    0,    0,
    0,    0,    0,    0,    0,    0,    0,    0,    0,    0,
    5,    6,   59,    0,   18,   19,    0,   20,   60,   22,
   23,    0,    0,   25,   26,   27,    0,    0,    0,    0,
    0,    0,    0,    0,   18,   19,    0,   20,   60,   22,
   23,    0,    0,   25,   26,   27,
]
yycheck = [                                              2,
    2,   38,   46,   46,   41,   40,   40,   44,   40,   12,
   41,   58,   41,   44,    6,   44,  125,   58,   44,   58,
  125,   58,   59,   60,  243,   62,   63,   58,   59,   58,
   59,   40,   10,   61,   63,  130,  232,   61,  223,  289,
  188,  308,   41,   41,  275,   44,   44,  259,  260,  141,
   28,   29,   30,   31,   32,  316,   93,   94,  289,  290,
   58,  322,   93,   91,   93,   59,   41,   91,   37,   44,
  337,  221,  222,   42,   43,   53,   45,   46,   47,   59,
   58,   41,   91,   40,   44,   40,   64,  124,  125,   40,
   68,  287,   70,   71,  125,   73,  125,   75,   76,  125,
  195,   79,   80,   81,   82,   83,   84,   85,   86,   87,
   88,   89,  257,   91,  262,  289,  335,  109,  110,  211,
   98,   99,  100,  101,  102,  103,  125,  105,  106,  107,
  108,  134,  134,  111,  112,  113,  114,  115,  116,  117,
  118,  119,  120,  121,  122,  330,  124,    0,  257,   40,
  125,  129,  130,   40,  289,   40,  198,   61,  136,   37,
  305,   59,  347,   44,   42,  207,   40,   44,   46,   47,
  275,   44,   40,   44,  319,  218,   40,  268,   41,  123,
   33,   44,   44,  284,  289,  290,   44,   40,  288,   42,
  289,  289,   45,  289,   40,   58,  199,  200,   37,   38,
  289,  257,   41,   42,   43,   44,   45,   46,   47,  284,
  188,   44,   93,  358,   41,   40,   93,  195,  260,   41,
   93,   60,   93,   62,   63,  203,  204,   44,  206,   40,
   93,   93,  279,  236,   58,   93,  288,  215,  279,  217,
  279,  219,  279,  221,  222,  223,  224,  123,  279,   93,
  279,  295,  296,  123,  289,   94,  292,  123,   44,  289,
  238,  239,  265,   41,  277,  268,  269,  262,  271,   59,
   41,  249,  125,  126,   41,   41,  313,  314,  315,  316,
  317,  318,  285,  285,  262,  124,  320,   41,  320,  318,
   41,  294,   41,  296,  297,  273,  125,  275,   37,   38,
   61,   41,   41,   42,   43,   44,   45,   46,   47,  312,
  123,  125,  289,  123,  123,  123,   61,  320,  320,   58,
   59,   60,   61,   62,   63,  123,  295,  296,  307,  308,
   91,   59,  335,  335,  125,   59,  125,   59,   58,   37,
  318,  125,   61,  322,   42,   43,  325,   45,   46,   47,
  328,  329,  330,   61,   93,   94,    0,   41,  337,  338,
  363,  363,   60,   41,   62,   37,   41,   41,  346,  347,
   42,   43,   93,   45,   46,   47,   41,   41,   41,  125,
  228,  125,  360,  125,  125,  124,  125,  365,  125,  125,
  299,  322,   74,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  256,  257,   -1,  259,  260,  261,   -1,
  263,   -1,  265,   -1,  267,  268,  269,  295,  296,   -1,
  273,  274,  275,  276,  277,  278,   -1,  280,   -1,   -1,
  283,  284,   -1,  286,  287,  288,  289,   -1,  291,  292,
  293,  294,   37,   38,   61,   -1,   41,   42,   43,   44,
   45,   46,   47,  259,  260,   -1,  295,  296,   -1,   -1,
   -1,  300,  301,   58,   59,   60,   -1,   62,   63,  275,
   -1,   -1,   -1,  312,  313,  314,  315,  316,  317,  318,
  319,   -1,   -1,  289,  290,  324,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,   93,   94,
   41,   42,   43,   44,   45,   46,   47,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   -1,  297,  298,   -1,   -1,
  279,  302,  303,  304,  305,  306,  307,  308,  309,  310,
  311,   -1,   93,   94,   -1,   -1,  295,  296,  297,  298,
   -1,  300,  301,  302,  303,  304,  305,  306,  307,  308,
  309,  310,  311,  312,  313,  314,  315,  316,  317,  318,
  319,   -1,   -1,  124,  125,  324,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   46,   47,  295,  296,   -1,
   -1,   -1,  300,  301,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   -1,  312,  313,  314,  315,  316,   41,
   -1,  319,   44,  295,  296,   -1,  324,   -1,  300,  301,
   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,   -1,
   37,   38,   93,   94,   41,   42,   43,   44,   45,   46,
   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   93,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
  297,  298,   -1,   -1,  279,  302,  303,  304,  305,  306,
  307,  308,  309,  310,  311,   -1,   93,   94,   -1,   -1,
  295,  296,   -1,  125,   -1,  300,  301,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  312,  313,  314,
  315,  316,  317,  318,  319,   -1,   -1,  124,  125,  324,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,   -1,
   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   46,   47,   -1,  295,  296,   -1,   -1,   -1,  300,
  301,   -1,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,  312,  313,  314,  315,  316,  317,  318,  319,   -1,
   -1,   -1,   -1,  324,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,   93,   94,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   37,   38,   -1,   -1,   41,   42,   43,
   44,   45,   -1,   47,   -1,   -1,   -1,   -1,  279,  124,
  125,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   93,   94,   -1,   -1,  295,  296,   -1,   -1,   -1,  300,
  301,   -1,   -1,   -1,   -1,   -1,   -1,  279,   -1,   -1,
   -1,  312,  313,  314,  315,  316,  317,  318,  319,   93,
   94,  124,  125,  324,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,   -1,   37,   38,   -1,   -1,   41,   42,
   43,   44,   45,   46,   47,   -1,   -1,   -1,  295,  296,
  124,  125,   -1,  300,  301,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   -1,   -1,   37,   38,  324,   -1,   41,
   42,   43,   44,   45,   -1,   47,   -1,   -1,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   37,   38,   -1,   -1,   41,   42,   43,   44,
   45,   -1,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,  124,  125,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   93,   94,   -1,  279,   41,   -1,   -1,   44,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  295,  296,   58,   59,   -1,  300,  301,   63,   93,   94,
   -1,   -1,  124,  125,   -1,   -1,   -1,  312,  313,  314,
  315,  316,  317,  318,  319,   38,  279,   -1,   41,  324,
   -1,   44,   -1,   -1,   -1,   -1,   -1,   93,   -1,  124,
  125,   -1,  295,  296,   -1,   58,   59,  300,  301,   -1,
   63,   -1,   -1,   -1,   -1,  279,   -1,   -1,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,   -1,   -1,  125,
   -1,  324,   -1,   -1,   -1,   -1,  300,  301,   -1,   -1,
   93,   94,   -1,   -1,   -1,   -1,   -1,   -1,  312,  313,
  314,  315,  316,  317,  318,  319,   -1,   37,   38,   -1,
  324,   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   58,   59,
   60,   -1,   62,   63,   -1,   -1,  279,   41,   -1,   -1,
   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  295,  296,   58,   59,   -1,  300,  301,   -1,
   -1,   -1,   -1,   93,   94,   -1,   -1,   -1,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,  279,   -1,   -1,
   -1,  324,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,  199,  200,   -1,  124,  125,   -1,   37,  300,  301,
   -1,   -1,   42,   43,  279,   45,   46,   47,   -1,   -1,
  312,  313,  314,  315,  316,  317,  318,  319,   -1,   -1,
   -1,  125,  324,   -1,   -1,  300,  301,   -1,  236,   -1,
   -1,   -1,   -1,  279,   -1,   -1,   -1,  312,  313,  314,
  315,  316,  317,  318,  319,   -1,   37,   38,   -1,  324,
   41,   42,   43,   44,   45,   -1,   47,  265,   -1,   -1,
  268,  269,   -1,  271,   -1,   -1,   -1,   58,   59,   60,
   -1,   62,   63,   37,   38,   -1,  279,   41,   42,   43,
   44,   45,   -1,   47,   -1,   -1,  294,   -1,  296,  297,
   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,   63,
   -1,   -1,   93,   94,  312,   -1,   -1,   -1,   -1,   -1,
  313,  314,   -1,   -1,  317,  318,   37,   38,   -1,   -1,
   41,   42,   43,   44,   45,   -1,   47,   -1,   -1,   93,
   94,   -1,   -1,  124,  125,   -1,   -1,   58,   59,   60,
   41,   62,   63,   44,   -1,   -1,   -1,   -1,   -1,  279,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   58,   59,   -1,
  124,  125,   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  300,  301,   93,   94,   -1,  279,   -1,   -1,   -1,   -1,
   -1,   -1,  312,  313,  314,  315,  316,  317,  318,  319,
   37,   38,   93,   -1,  324,   42,   43,   44,   45,   46,
   47,   -1,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   60,   -1,   62,   63,   37,   38,   -1,
   -1,   -1,   42,   43,  125,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   60,   -1,   62,   63,   37,   38,   -1,   94,   41,   42,
   43,   -1,   45,   46,   47,  295,  296,   -1,   -1,   -1,
  300,  301,   -1,   -1,   -1,   -1,   -1,   60,   -1,   62,
   63,   -1,  312,   -1,   94,   -1,   -1,  124,   -1,  319,
   -1,   -1,   -1,   -1,  324,   -1,   -1,   -1,  279,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   94,   -1,   -1,  124,   -1,   -1,   -1,   -1,  300,
  301,   -1,   -1,   -1,   -1,  279,   -1,   -1,   -1,   -1,
   -1,  312,  313,  314,  315,  316,  317,  318,  319,   -1,
   -1,  124,   -1,  324,   -1,   -1,  300,  301,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  312,  313,
  314,  315,  316,  317,  318,  319,   38,   -1,  279,   41,
  324,   -1,   44,   37,   38,   -1,   -1,   41,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   58,   59,  279,  300,
  301,   63,   -1,   -1,   -1,   -1,   60,   -1,   62,   63,
   -1,  312,  313,  314,  315,  316,  317,  318,  319,   -1,
   37,   38,   -1,  324,   41,   42,   43,   -1,   45,   46,
   47,   93,   94,   -1,   -1,   -1,  317,  318,   -1,   -1,
   94,   -1,   -1,   60,   -1,   62,   63,   41,   -1,   -1,
   44,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  124,  125,   58,   59,   -1,   -1,  295,  296,
  124,   -1,   -1,  300,  301,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   -1,   -1,  295,  296,  324,   -1,   93,
  300,  301,   -1,   -1,   -1,   -1,   -1,  124,   41,   -1,
   -1,   44,  312,  313,  314,  315,  316,  317,  318,  319,
   -1,   -1,  295,  296,  324,   58,   59,  300,  301,   -1,
   -1,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,   41,   37,   38,
   44,  324,   41,   42,   43,   -1,   45,   46,   47,   -1,
   93,   -1,   -1,   38,   58,   59,   41,   -1,   -1,   44,
   -1,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
   -1,   37,   38,   58,   59,   -1,   42,   43,   63,   45,
   46,   47,  125,   -1,   -1,   -1,   -1,   -1,   -1,   93,
   -1,   -1,   -1,   59,   60,   94,   62,   63,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  279,   93,   94,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,  125,   -1,   -1,   -1,  124,   -1,   -1,   94,   -1,
   -1,  295,  296,   60,   -1,   62,  300,  301,   -1,  124,
  125,  313,  314,   -1,   -1,  317,  318,   -1,  312,  313,
  314,  315,  316,  317,  318,  319,   37,   38,  124,   -1,
  324,   42,   43,   -1,   45,   46,   47,   94,  295,  296,
   -1,   -1,   -1,  300,  301,  279,   -1,   58,   -1,   60,
   -1,   62,   63,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   -1,   37,   38,   -1,  324,   41,   42,
   43,   -1,   45,   46,   47,   -1,   41,   -1,   -1,   44,
   -1,   -1,   -1,   94,   -1,   -1,   -1,   60,   -1,   62,
   63,   37,   38,   58,   59,   41,   42,   43,   63,   45,
   46,   47,   -1,   -1,   -1,   -1,  279,   -1,   -1,   41,
   -1,   -1,   44,  124,   60,   -1,   62,   63,   -1,   -1,
   -1,   94,   -1,   -1,   37,   38,   58,   59,   93,   42,
   43,   63,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  279,   59,   60,   94,   62,
   63,  124,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  124,
  125,   93,   94,   -1,  279,   -1,  295,  296,   -1,   -1,
   -1,  300,  301,   -1,   -1,   -1,   -1,   -1,  124,   -1,
   -1,   94,   -1,  312,  313,  314,  315,  316,  317,  318,
  319,   -1,  124,  125,   -1,  324,   -1,   -1,   -1,  295,
  296,   -1,  317,  318,  300,  301,   -1,   -1,   -1,   -1,
   -1,  124,   -1,   -1,   -1,   -1,  312,  313,  314,  315,
  316,  317,  318,  319,   -1,   37,   38,   -1,  324,   41,
   42,   43,   -1,   45,   46,   47,   -1,   -1,  295,  296,
   -1,   -1,   -1,  300,  301,   -1,   -1,   -1,   60,   -1,
   62,   63,   -1,   -1,   -1,  312,  313,  314,  315,  316,
   -1,   -1,  319,   -1,   -1,   -1,   -1,  324,   -1,   37,
   38,   -1,   -1,   41,   42,   43,   -1,   45,   46,   47,
   41,   -1,   94,   44,  295,  296,   -1,   -1,   -1,  300,
  301,   -1,   60,   -1,   62,   63,   -1,   58,   59,   -1,
   -1,  312,  313,  314,  315,  316,  317,  318,  319,   -1,
   37,   38,  124,  324,  279,   42,   43,   -1,   45,   46,
   47,   -1,  295,  296,   -1,   -1,   94,  300,  301,   -1,
   -1,   -1,   93,   60,   -1,   62,   -1,   -1,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,  279,   -1,  295,
  296,  324,  317,  318,  300,  301,  124,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  125,   -1,  312,  313,  314,  315,
  316,  317,  318,  319,   41,   -1,   -1,   44,  324,   -1,
   -1,   -1,  295,  296,   -1,  317,  318,  300,  301,   -1,
   -1,   58,   59,   -1,   -1,   -1,   -1,   -1,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,   37,   38,   -1,
   -1,  324,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   -1,   -1,   59,
   60,   -1,   62,   63,   37,   38,   -1,   -1,   -1,   42,
   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,  125,   62,
   63,   -1,   -1,   -1,   94,   -1,   -1,   37,   38,   -1,
   -1,   41,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,  295,  296,   -1,   -1,   -1,  300,  301,
   60,   94,   62,   63,  124,   -1,   -1,   -1,   -1,   -1,
  312,  313,  314,  315,  316,  317,  318,  319,   -1,   -1,
   -1,   -1,  324,   -1,   -1,   -1,   38,   -1,  279,   41,
   -1,  124,   44,   -1,   94,   -1,   -1,  295,  296,   -1,
   -1,   -1,  300,  301,   -1,   -1,   58,   59,   60,   -1,
   62,   63,   -1,   -1,  312,  313,  314,  315,  316,  317,
  318,  319,   -1,   -1,  124,   -1,  324,   37,   38,   -1,
   -1,   41,   42,   43,   -1,   45,   46,   47,  295,  296,
   -1,   93,   94,  300,  301,   -1,   -1,   -1,   -1,   -1,
   60,   -1,   62,   63,   -1,  312,  313,  314,  315,  316,
   37,   38,  319,   -1,   41,   42,   43,  324,   45,   46,
   47,   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  279,   60,   94,   62,   63,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,
   60,   -1,   62,   63,  124,   -1,   -1,   94,   -1,   -1,
   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,   46,
   47,   -1,   -1,   -1,   -1,  295,  296,   -1,   -1,   -1,
  300,  301,   59,   60,   94,   62,   63,  124,   -1,   -1,
   -1,   -1,  312,  313,  314,  315,  316,  317,  318,  319,
   -1,   -1,  295,  296,  324,   -1,   -1,  300,  301,   -1,
   -1,   -1,   -1,   -1,  124,   -1,   -1,   94,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,   -1,   -1,   -1,
   -1,  324,   -1,   -1,   -1,  295,  296,   -1,   -1,   -1,
  300,  301,   -1,   41,   -1,   41,   44,  124,   44,   -1,
   -1,   -1,  312,  313,  314,  315,  316,  317,  318,  319,
   58,   59,   58,   59,  324,   37,   38,  279,   -1,   -1,
   42,   43,   -1,   45,   46,   47,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,
   62,   63,   -1,   -1,   -1,   93,   -1,   93,   -1,   -1,
  312,  313,  314,  315,  316,  317,  318,  319,   -1,   -1,
   37,   38,  324,   -1,   -1,   42,   43,   -1,   45,   46,
   47,   -1,   94,   -1,   -1,  295,  296,  125,   -1,  125,
  300,  301,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,   -1,  312,  313,  314,  315,  316,  317,  318,  319,
   -1,   -1,  124,   -1,  324,   -1,   -1,   -1,  295,  296,
   -1,   -1,   -1,  300,  301,   -1,   -1,   94,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   -1,   -1,  295,  296,  324,   -1,   -1,
  300,  301,   -1,   41,   -1,   -1,   44,  124,   41,   -1,
   -1,   44,  312,  313,  314,  315,  316,  317,  318,  319,
   58,   59,   -1,   -1,  324,   58,   59,   -1,  295,  296,
   -1,   -1,   -1,  300,  301,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   37,   38,   93,   -1,  324,   42,   43,
   93,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   59,   60,   -1,   62,   63,
   37,   38,   -1,   -1,   -1,   42,   43,  125,   45,   46,
   47,  279,  125,  279,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   37,   38,
   -1,   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,
   -1,   -1,   -1,  295,  296,   -1,   -1,   94,  300,  301,
  124,   60,   -1,   62,   63,   -1,   -1,   -1,   -1,   -1,
  312,  313,  314,  315,  316,  317,  318,  319,   -1,   -1,
   -1,   -1,  324,   37,   38,   -1,   -1,  124,   42,   43,
   -1,   45,   46,   47,   -1,   94,   -1,   -1,  295,  296,
   -1,   -1,   -1,  300,  301,   -1,   60,   -1,   62,   63,
   -1,   -1,   -1,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   37,   38,  124,   -1,  324,   42,   43,
   -1,   45,   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,
   94,   -1,   -1,   -1,   -1,   -1,   60,   38,   62,   63,
   41,   -1,   -1,   44,   37,   38,   -1,   -1,   -1,   42,
   43,  279,   45,   46,   47,   -1,  279,   58,   59,   60,
  124,   62,   63,   -1,   -1,   -1,   -1,   60,   -1,   62,
   94,   37,   38,   -1,   -1,   -1,   42,   43,   -1,   45,
   46,   47,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   93,   94,   60,   -1,   62,   -1,   -1,   -1,
  124,   94,   -1,   -1,   -1,   -1,   -1,   37,   38,   -1,
   -1,   -1,   42,   43,   -1,   45,   46,   47,   -1,   -1,
   -1,  295,  296,  124,  125,   -1,  300,  301,   94,   -1,
   60,  124,   62,   -1,   -1,   -1,   -1,   -1,  312,  313,
  314,  315,  316,  317,  318,  319,   -1,   -1,  295,  296,
  324,   37,   -1,  300,  301,   -1,   42,   43,  124,   45,
   46,   47,   -1,   -1,   94,  312,  313,  314,  315,  316,
  317,  318,  319,   -1,   60,   -1,   62,  324,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,  295,  296,   -1,   -1,
   -1,  300,  301,   -1,  124,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  312,  313,  314,  315,  316,  317,  318,
  319,   -1,   -1,   -1,   -1,  324,   -1,   41,   38,   -1,
   44,   41,   -1,   43,   44,   45,   -1,   -1,   -1,   -1,
   -1,  295,  296,   -1,   58,   59,  300,  301,   58,   59,
   60,   38,   62,   63,   41,   -1,   -1,   44,  312,  313,
  314,  315,  316,  317,  318,  319,   -1,   -1,   -1,   -1,
  324,   58,   59,   60,   -1,   62,   63,   -1,   -1,   93,
   -1,  295,  296,   93,   94,   -1,  300,  301,  279,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  312,  313,
  314,  315,  316,  317,  318,  319,   93,   94,   -1,   -1,
  324,  125,  295,  296,  124,  125,   -1,  300,  301,   -1,
   -1,   -1,  313,  314,  315,  316,  317,  318,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,  124,  125,  295,
  296,  324,   -1,   -1,  300,  301,   -1,   -1,   -1,   61,
   -1,   -1,   -1,   -1,   -1,   -1,  312,  313,  314,  315,
  316,  317,   -1,  319,   -1,   -1,   38,   -1,  324,   41,
   -1,   43,   44,   45,   -1,  295,  296,   -1,   -1,   -1,
  300,  301,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,
   62,   63,  312,  313,  314,  315,  316,   -1,   -1,  319,
   -1,   -1,   -1,   -1,  324,   -1,   -1,   38,   -1,   -1,
   41,   -1,   -1,   44,   -1,   -1,   -1,   -1,   -1,  295,
  296,   93,   94,   -1,  300,  301,   -1,   58,   59,   60,
   -1,   62,   63,   -1,   -1,   -1,  312,   -1,   -1,  315,
  316,   -1,   -1,  319,   -1,   -1,   -1,   -1,  324,   -1,
   -1,   -1,  124,  125,   -1,   38,   -1,   -1,   41,   -1,
   -1,   44,   93,   94,   -1,  279,   -1,   -1,   -1,  279,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  300,  301,  279,  124,  125,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,  312,  313,  314,  315,  316,  317,  318,  319,
   93,   94,   -1,   -1,  324,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  312,  313,  314,  315,  316,
  317,  318,  319,   38,   -1,   -1,   41,  324,   -1,   44,
   -1,  124,  125,   -1,   -1,   38,   -1,   -1,   41,   -1,
   -1,   44,   -1,   58,   59,   60,   -1,   62,   63,   -1,
   -1,   -1,   -1,   -1,   -1,   58,   59,   60,   -1,   62,
   63,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,  297,  298,   -1,   93,   94,
  302,  303,  304,  305,  306,  307,  308,  309,  310,  311,
   93,   94,   -1,   -1,   33,   -1,   -1,  279,   -1,   -1,
   -1,   40,   -1,   42,   -1,   -1,   45,   -1,   -1,  124,
  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  300,  301,
   -1,  124,  125,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  312,  313,  314,  315,  316,  317,  318,  319,  279,   -1,
   -1,   38,  324,   33,   41,   -1,   -1,   44,   -1,   -1,
   40,   -1,   42,   -1,   -1,   45,   -1,   -1,   -1,  300,
  301,   58,   59,   60,   -1,   62,   63,   -1,   -1,   -1,
   -1,  312,  313,  314,  315,  316,  317,  318,  319,   -1,
   -1,   -1,   -1,  324,   -1,   -1,  279,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   93,   94,   -1,   -1,
   -1,   -1,   33,   -1,   -1,   -1,   -1,  300,  301,   40,
   -1,   42,   -1,   -1,   45,   -1,   -1,   -1,   -1,  312,
  313,  314,  315,  316,  317,  318,  319,  124,  125,   -1,
   -1,  324,   -1,   -1,   -1,   -1,  126,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   42,   -1,
   -1,   45,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  279,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,  279,   -1,   -1,   -1,
   -1,   -1,   40,   -1,   42,   -1,   -1,   45,   -1,   -1,
   -1,   -1,  123,   -1,   -1,  126,   -1,  312,  313,  314,
  315,  316,  317,  318,  319,   -1,   -1,   -1,   -1,  324,
  313,  314,  315,  316,  317,  318,   -1,  256,  257,   -1,
  259,  260,  261,   -1,  263,   -1,  265,   -1,  267,  268,
  269,  125,  126,   -1,   -1,  274,  275,  276,   -1,  278,
   -1,  280,   -1,   -1,  283,  284,   -1,  286,  287,  288,
  289,   -1,  291,  292,  293,  294,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  125,  126,  259,
  260,  261,   -1,  263,   -1,  265,   -1,  267,  268,  269,
   -1,   -1,  279,  273,  274,  275,  276,  277,  278,   -1,
   -1,   -1,   -1,  283,  284,   -1,  286,  287,  288,  289,
   -1,  291,  292,  293,  294,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   33,  313,  314,  315,  316,
  317,  318,   40,   -1,   42,   -1,   -1,   45,  259,  260,
  261,   -1,  263,   -1,  265,   -1,  267,  268,  269,   -1,
   -1,   -1,   -1,  274,  275,  276,   -1,  278,   -1,   -1,
   -1,   -1,  283,  284,   -1,  286,  287,  288,  289,   -1,
  291,  292,  293,  294,   -1,  259,  260,  261,   -1,  263,
   -1,  265,   -1,  267,  268,  269,   33,   -1,   -1,   -1,
  274,  275,  276,   40,  278,   42,   -1,   -1,   45,  283,
  284,   -1,  286,  287,  288,  289,   -1,  291,  292,  293,
  294,  259,  260,  261,   -1,  263,   -1,  265,  126,  267,
  268,  269,   33,   -1,   -1,   -1,  274,  275,  276,   40,
  278,   42,   -1,   -1,   45,  283,  284,   -1,  286,  287,
  288,  289,   33,  291,  292,  293,  294,   -1,   59,   40,
   -1,   42,   -1,   -1,   45,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   33,   -1,   -1,   -1,   -1,   59,   -1,
   40,   -1,   42,   -1,   -1,   45,   -1,   -1,  125,  126,
   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,
   42,   -1,   -1,   45,   -1,   -1,   -1,   -1,   -1,   33,
   -1,   -1,   -1,   -1,   -1,   -1,   40,   -1,   42,   -1,
   -1,   45,   -1,   -1,   -1,  126,   -1,   33,   -1,   -1,
   -1,   91,   -1,   -1,   40,   59,   42,   -1,   -1,   45,
   -1,   -1,   -1,   -1,   -1,  126,   -1,   33,   -1,   -1,
   -1,   -1,   -1,   59,   40,   41,   42,   -1,   -1,   45,
   -1,  259,  260,  261,   -1,  263,  126,  265,   -1,  267,
  268,  269,   -1,   -1,   -1,   -1,  274,  275,  276,   -1,
  278,  123,   -1,   -1,  126,  283,  284,   -1,  286,  287,
  288,  289,   -1,  291,  292,  293,  294,   33,   -1,   -1,
   -1,   -1,  126,   -1,   40,   41,   42,   -1,   -1,   45,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  126,   -1,  259,  260,  261,   -1,  263,   -1,  265,   -1,
  267,  268,  269,   -1,   -1,   -1,   -1,  274,  275,  276,
  126,  278,   -1,   -1,   -1,   -1,  283,  284,   -1,  286,
  287,  288,  289,   -1,  291,  292,  293,  294,  259,  260,
  261,   -1,   -1,   33,   -1,   -1,   -1,   -1,   -1,   -1,
   40,   41,   42,   -1,   -1,   45,   -1,   -1,  259,  260,
  261,   -1,  283,  284,   -1,  286,  287,  288,  289,   -1,
  126,  292,  293,  294,   -1,   -1,   -1,   -1,   -1,  259,
  260,  261,  283,  284,   -1,  286,  287,  288,  289,   -1,
   -1,  292,  293,  294,   -1,   -1,   -1,  259,  260,  261,
   -1,   -1,   -1,  283,  284,   -1,  286,  287,  288,  289,
   -1,   -1,  292,  293,  294,  259,  260,  261,   -1,   -1,
   -1,  283,  284,   -1,  286,  287,  288,  289,   -1,   -1,
  292,  293,  294,  259,  260,  261,  126,   -1,   -1,  283,
  284,   -1,  286,  287,  288,  289,   -1,   -1,  292,  293,
  294,   -1,   -1,  259,  260,  261,   -1,  283,  284,   -1,
  286,  287,  288,  289,   33,   -1,  292,  293,  294,   -1,
   -1,   40,   41,   42,   -1,   -1,   45,  283,  284,   -1,
  286,  287,  288,  289,   33,   -1,  292,  293,  294,   -1,
   -1,   40,   -1,   42,   -1,   -1,   45,   -1,   -1,   -1,
   -1,   -1,   -1,  259,  260,  261,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  283,  284,   -1,
  286,  287,  288,  289,   -1,   -1,  292,  293,  294,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,  259,
  260,  261,   -1,   -1,   -1,   -1,   -1,  126,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,  283,  284,   -1,  286,  287,  288,  289,
   -1,   -1,  292,  293,  294,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  259,  260,  261,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,   -1,
  259,  260,  261,   -1,  283,  284,   -1,  286,  287,  288,
  289,   -1,   -1,  292,  293,  294,   -1,   -1,   -1,   -1,
   -1,   -1,   -1,   -1,  283,  284,   -1,  286,  287,  288,
  289,   -1,   -1,  292,  293,  294,
]
YYFINAL=1
#ifndef YYDEBUG
#define YYDEBUG 0
#endif
YYMAXTOKEN=325
#if YYDEBUG
yyname = [
"end-of-file",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
"'!'",0,0,0,"'%'","'&'",0,"'('","')'","'*'","'+'","','","'-'","'.'","'/'",0,0,0,
0,0,0,0,0,0,0,"':'","';'","'<'","'='","'>'","'?'","'@'",0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,"'['",0,"']'","'^'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,"'{'","'|'","'}'","'~'",0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"rwDEFINE",
"rwENDDEF","rwDECLARE","rwDECLARESINGLETON","rwBREAK","rwELSE","rwCONTINUE",
"rwGLOBAL","rwIF","rwNIL","rwRETURN","rwWHILE","rwDO","rwENDIF","rwENDWHILE",
"rwENDFOR","rwDEFAULT","rwFOR","rwDATABLOCK","rwSWITCH","rwCASE","rwSWITCHSTR",
"rwCASEOR","rwPACKAGE","rwNAMESPACE","rwCLASS","rwASSERT","ILLEGAL_TOKEN",
"CHRCONST","INTCONST","TTAG","VAR","IDENT","TYPE","DOCBLOCK","STRATOM",
"TAGATOM","FLTCONST","opINTNAME","opINTNAMER","opMINUSMINUS","opPLUSPLUS",
"STMT_SEP","opSHL","opSHR","opPLASN","opMIASN","opMLASN","opDVASN","opMODASN",
"opANDASN","opXORASN","opORASN","opSLASN","opSRASN","opCAT","opEQ","opNE",
"opGE","opLE","opAND","opOR","opSTREQ","opCOLONCOLON","opMDASN","opNDASN",
"opNTASN","opSTRNE","UNARY",
]
yyrule = [
"$accept : start",
"start : decl_list",
"decl_list :",
"decl_list : decl_list decl",
"decl : error",
"decl : stmt",
"decl : fn_decl_stmt",
"decl : package_decl",
"package_decl : rwPACKAGE IDENT '{' fn_decl_list '}' ';'",
"fn_decl_list : fn_decl_stmt",
"fn_decl_list : fn_decl_list fn_decl_stmt",
"statement_list :",
"statement_list : statement_list stmt",
"stmt : if_stmt",
"stmt : while_stmt",
"stmt : for_stmt",
"stmt : datablock_decl",
"stmt : switch_stmt",
"stmt : rwBREAK ';'",
"stmt : rwCONTINUE ';'",
"stmt : rwRETURN ';'",
"stmt : rwRETURN expr ';'",
"stmt : expression_stmt ';'",
"stmt : TTAG '=' expr ';'",
"stmt : TTAG '=' expr ',' expr ';'",
"stmt : DOCBLOCK",
"fn_decl_stmt : rwDEFINE IDENT '(' var_list_decl ')' '{' statement_list '}'",
"fn_decl_stmt : rwDEFINE IDENT opCOLONCOLON IDENT '(' var_list_decl ')' '{' statement_list '}'",
"var_list_decl :",
"var_list_decl : var_list",
"var_list : VAR",
"var_list : var_list ',' VAR",
"datablock_decl : rwDATABLOCK IDENT '(' IDENT parent_block ')' '{' slot_assign_list '}' ';'",
"object_decl : rwDECLARE class_name_expr '(' object_name parent_block object_args ')' '{' object_declare_block '}'",
"object_decl : rwDECLARE class_name_expr '(' object_name parent_block object_args ')'",
"object_decl : rwDECLARE class_name_expr '(' '[' object_name ']' parent_block object_args ')' '{' object_declare_block '}'",
"object_decl : rwDECLARE class_name_expr '(' '[' object_name ']' parent_block object_args ')'",
"object_decl : rwDECLARESINGLETON class_name_expr '(' object_name parent_block object_args ')' '{' object_declare_block '}'",
"object_decl : rwDECLARESINGLETON class_name_expr '(' object_name parent_block object_args ')'",
"parent_block :",
"parent_block : ':' IDENT",
"object_name :",
"object_name : expr",
"object_args :",
"object_args : ',' expr_list",
"object_declare_block :",
"object_declare_block : slot_assign_list",
"object_declare_block : object_decl_list",
"object_declare_block : slot_assign_list object_decl_list",
"object_decl_list : object_decl ';'",
"object_decl_list : object_decl_list object_decl ';'",
"stmt_block : '{' statement_list '}'",
"stmt_block : stmt",
"switch_stmt : rwSWITCH '(' expr ')' '{' case_block '}'",
"switch_stmt : rwSWITCHSTR '(' expr ')' '{' case_block '}'",
"case_block : rwCASE case_expr ':' statement_list",
"case_block : rwCASE case_expr ':' statement_list rwDEFAULT ':' statement_list",
"case_block : rwCASE case_expr ':' statement_list case_block",
"case_expr : expr",
"case_expr : case_expr rwCASEOR expr",
"if_stmt : rwIF '(' expr ')' stmt_block",
"if_stmt : rwIF '(' expr ')' stmt_block rwELSE stmt_block",
"while_stmt : rwWHILE '(' expr ')' stmt_block",
"while_stmt : rwDO stmt_block rwWHILE '(' expr ')'",
"for_stmt : rwFOR '(' expr ';' expr ';' expr ')' stmt_block",
"for_stmt : rwFOR '(' expr ';' expr ';' ')' stmt_block",
"for_stmt : rwFOR '(' expr ';' ';' expr ')' stmt_block",
"for_stmt : rwFOR '(' expr ';' ';' ')' stmt_block",
"for_stmt : rwFOR '(' ';' expr ';' expr ')' stmt_block",
"for_stmt : rwFOR '(' ';' expr ';' ')' stmt_block",
"for_stmt : rwFOR '(' ';' ';' expr ')' stmt_block",
"for_stmt : rwFOR '(' ';' ';' ')' stmt_block",
"expression_stmt : stmt_expr",
"expr : stmt_expr",
"expr : '(' expr ')'",
"expr : expr '^' expr",
"expr : expr '%' expr",
"expr : expr '&' expr",
"expr : expr '|' expr",
"expr : expr '+' expr",
"expr : expr '-' expr",
"expr : expr '*' expr",
"expr : expr '/' expr",
"expr : '-' expr",
"expr : '*' expr",
"expr : TTAG",
"expr : expr '?' expr ':' expr",
"expr : expr '<' expr",
"expr : expr '>' expr",
"expr : expr opGE expr",
"expr : expr opLE expr",
"expr : expr opEQ expr",
"expr : expr opNE expr",
"expr : expr opOR expr",
"expr : expr opSHL expr",
"expr : expr opSHR expr",
"expr : expr opAND expr",
"expr : expr opSTREQ expr",
"expr : expr opSTRNE expr",
"expr : expr opCAT expr",
"expr : '!' expr",
"expr : '~' expr",
"expr : TAGATOM",
"expr : FLTCONST",
"expr : INTCONST",
"expr : rwBREAK",
"expr : slot_acc",
"expr : intslot_acc",
"expr : IDENT",
"expr : STRATOM",
"expr : VAR",
"expr : VAR '[' aidx_expr ']'",
"expr : illegal_token_list",
"slot_acc : expr '.' IDENT",
"slot_acc : expr '.' IDENT '[' aidx_expr ']'",
"intslot_acc : expr opINTNAME class_name_expr",
"intslot_acc : expr opINTNAMER class_name_expr",
"class_name_expr : IDENT",
"class_name_expr : '(' expr ')'",
"assign_op_struct : opPLUSPLUS",
"assign_op_struct : opMINUSMINUS",
"assign_op_struct : opPLASN expr",
"assign_op_struct : opMIASN expr",
"assign_op_struct : opMLASN expr",
"assign_op_struct : opDVASN expr",
"assign_op_struct : opMODASN expr",
"assign_op_struct : opANDASN expr",
"assign_op_struct : opXORASN expr",
"assign_op_struct : opORASN expr",
"assign_op_struct : opSLASN expr",
"assign_op_struct : opSRASN expr",
"stmt_expr : funcall_expr",
"stmt_expr : assert_expr",
"stmt_expr : object_decl",
"stmt_expr : VAR '=' expr",
"stmt_expr : VAR '[' aidx_expr ']' '=' expr",
"stmt_expr : VAR assign_op_struct",
"stmt_expr : VAR '[' aidx_expr ']' assign_op_struct",
"stmt_expr : slot_acc assign_op_struct",
"stmt_expr : slot_acc '=' expr",
"stmt_expr : slot_acc '=' '{' expr_list '}'",
"funcall_expr : IDENT '(' expr_list_decl ')'",
"funcall_expr : IDENT opCOLONCOLON IDENT '(' expr_list_decl ')'",
"funcall_expr : expr '.' IDENT '(' expr_list_decl ')'",
"assert_expr : rwASSERT '(' expr ')'",
"assert_expr : rwASSERT '(' expr ',' STRATOM ')'",
"expr_list_decl :",
"expr_list_decl : expr_list",
"expr_list : expr",
"expr_list : expr_list ',' expr",
"slot_assign_list : slot_assign",
"slot_assign_list : slot_assign_list slot_assign",
"slot_assign : IDENT '=' expr ';'",
"slot_assign : TYPE IDENT '=' expr ';'",
"slot_assign : rwDATABLOCK '=' expr ';'",
"slot_assign : IDENT '[' aidx_expr ']' '=' expr ';'",
"slot_assign : TYPE IDENT '[' aidx_expr ']' '=' expr ';'",
"aidx_expr : expr",
"aidx_expr : aidx_expr ',' expr",
"$$1 :",
"illegal_token_list : ILLEGAL_TOKEN $$1 illegal_token_list ILLEGAL_TOKEN",
]
#endif
import os, types
def yyclearin() :
    global yychar
    yychar = -1
def yyerrok() :
    global yyerrflag
    yyerrflag = 0
YYSTACKSIZE = 500
def yy_clear_stacks():
    global yyss, yyvs, YYSTACKSIZE
    yyss = [0]*YYSTACKSIZE
    yyvs = [None]*YYSTACKSIZE
yy_clear_stacks()
def YYERROR() :
  global yynerrs
  yynerrs=yynerrs+1
  yy_err_recover()

def yy_err_recover() :
  global yyerrflag, yyn, yystate, yyssp, yyss, yyvsp, yyvs, yystate, yylval, yychar, yydebug, yynerrs
  if yyerrflag < 3 :
    yyerrflag = 3
    while 1 :
      yyn = yysindex[yyss[yyssp]]
      if yyn :
        yyn = yyn + YYERRCODE
        if yyn >= 0 and yycheck[yyn] == YYERRCODE :
          yystate = yytable[yyn]
          yyssp+=1
          #yyss.append( yystate )
          yyss[yyssp] = yystate 
          yyvsp+=1
          #yyvs.append( yylval )
          yyvs[yyvsp] = yylval 
          return 2 #next yyloop;
        else :
          if yyssp <= 0 :
            return 1
          yyss[yyssp] = 0
          yyssp-=1
          #yyss.pop()
          yyvs[yyvsp] = None
          yyvsp-=1
          #yyvs.pop()
  else :
    if yychar == 0 :
      return 1
    yychar = -1
    return 2 #next yyloop;
  return 0

def yyparse() :
  global yyerrflag, yyn, yystate, yyssp, yyss, yyvsp, yyvs, yystate, yylval, yychar, yydebug, yynerrs
  yydebug = int( os.environ.get('YYDEBUG','0') )
  yynerrs = 0
  yyerrflag = 0
  yychar = -1
  yyssp = 0
  yyvsp = 0
  yyss[yyssp] = 0
  yystate = 0
  #yyloop:
  while 1 :
    #yyreduce: 
    yyn = yydefred[yystate]
    if not yyn :
      if yychar < 0 :
        (yychar, yylval) = yylex()
        if type( yychar ) is types.StringType:
          yychar = ord( yychar )
        if yychar < 0 :
          yychar = 0
        if yydebug :
          print 'yydebug: state ', yystate, ', reading ', yychar, ' (', yyname[yychar], ')'
      yyn = yysindex[yystate]
      if yyn :
        yyn = yyn + yychar
        if yyn >= 0 and yycheck[yyn] == yychar :
          if yydebug :
            print 'yydebug: state ', yystate, ', shifting to state ', yytable[yyn]
          yystate = yytable[yyn]
          yyssp+=1
          #yyss.append( yystate )
          yyss[yyssp] = yystate 
          yyvsp+=1
          #yyvs.append( yylval )
          yyvs[yyvsp] = yylval 
          yychar = -1
          if yyerrflag > 0 :
            yyerrflag -= 1
          continue
      yyn = yyrindex[yystate]
      if yyn :
        yyn = yyn + yychar
        if yyn >= 0 and yycheck[yyn] == yychar :
          yyn = yytable[yyn]
      elif not yyerrflag :
        try :
          yyerror('syntax error')
        except:          print 'No yyerror function'
        yynerrs+=1
      elif yy_err_recover() == 1 :
        return(1)
      elif yy_err_recover() == 2 :
        yychar = -1
        continue
    # yyreduce
    if yydebug :
      print 'yydebug: state ', yystate, ', reducing by rule ', yyn, ' (', yyrule[yyn], ')'
    yym = yylen[yyn]
    yyval = yyvs[yyvsp+1-yym]
    # switch:
    if yyn == 1 :
#line 66 "CMDgram.y"

        yyval = (yyvs[yyvsp-0])#.build_tree_list()
        #$$[0] = "%s: %s" % (torque_lex.get_current_file(), $$[0])

    if yyn == 2 :
#line 72 "CMDgram.y"

        yyval = StmtList()

    if yyn == 3 :
#line 74 "CMDgram.y"

        (yyvs[yyvsp-1]).append(yyvs[yyvsp-0])
        yyval = yyvs[yyvsp-1]

    if yyn == 4 :
#line 80 "CMDgram.y"

        yyval = ExprNode()
        yyval.illegal_expr = yyvs[yyvsp-0]

    if yyn == 5 :
#line 83 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 6 :
#line 85 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 7 :
#line 88 "CMDgram.y"

        yyval = yyvs[yyvsp-0];

    if yyn == 8 :
#line 93 "CMDgram.y"

        yyval = yyvs[yyvsp-2]
        for walk in (yyvs[yyvsp-2]).stmts:
                walk.set_package(yyvs[yyvsp-4])

    if yyn == 9 :
#line 100 "CMDgram.y"

        yyval = StmtList(yyvs[yyvsp-0])

    if yyn == 10 :
#line 102 "CMDgram.y"

        yyval = yyvs[yyvsp-1]
        (yyvs[yyvsp-1]).append(yyvs[yyvsp-0])

    if yyn == 11 :
#line 108 "CMDgram.y"

        yyval = StmtList()

    if yyn == 12 :
#line 110 "CMDgram.y"

        (yyvs[yyvsp-1]).append(yyvs[yyvsp-0])
        yyval = yyvs[yyvsp-1];

    if yyn == 18 :
#line 121 "CMDgram.y"

        yyval = BreakStmtNode()

    if yyn == 19 :
#line 123 "CMDgram.y"

        yyval = ContinueStmtNode()

    if yyn == 20 :
#line 125 "CMDgram.y"

        yyval = ReturnStmtNode(None)

    if yyn == 21 :
#line 127 "CMDgram.y"

        yyval = ReturnStmtNode(yyvs[yyvsp-1])

    if yyn == 22 :
#line 129 "CMDgram.y"

        yyval = yyvs[yyvsp-1];

    if yyn == 23 :
#line 131 "CMDgram.y"

        yyval = TTagSetStmtNode(yyvs[yyvsp-3], yyvs[yyvsp-1], None)

    if yyn == 24 :
#line 133 "CMDgram.y"

        yyval = TTagSetStmtNode(yyvs[yyvsp-5], yyvs[yyvsp-3], yyvs[yyvsp-1])

    if yyn == 25 :
#line 135 "CMDgram.y"

        yyval = StrConstNode(yyvs[yyvsp-0], False, True)

    if yyn == 26 :
#line 140 "CMDgram.y"

        yyval = FunctionDeclStmtNode(yyvs[yyvsp-6], None, yyvs[yyvsp-4], yyvs[yyvsp-1])

    if yyn == 27 :
#line 142 "CMDgram.y"

        yyval = FunctionDeclStmtNode(yyvs[yyvsp-6], yyvs[yyvsp-8], yyvs[yyvsp-4], yyvs[yyvsp-1])

    if yyn == 28 :
#line 147 "CMDgram.y"

        yyval = StmtList()

    if yyn == 29 :
#line 149 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 30 :
#line 154 "CMDgram.y"

        yyval = StmtList(VarNode(yyvs[yyvsp-0],None))

    if yyn == 31 :
#line 156 "CMDgram.y"

        yyval = yyvs[yyvsp-2]
        (yyvs[yyvsp-2]).append(VarNode(yyvs[yyvsp-0], None))

    if yyn == 32 :
#line 162 "CMDgram.y"

        yyval = ObjectDeclNode(ConstantNode(yyvs[yyvsp-8]), ConstantNode(yyvs[yyvsp-6]), None, yyvs[yyvsp-5], yyvs[yyvsp-2], None, True, False, False)

    if yyn == 33 :
#line 167 "CMDgram.y"

        yyval = ObjectDeclNode(yyvs[yyvsp-8], yyvs[yyvsp-6], yyvs[yyvsp-4], yyvs[yyvsp-5], yyvs[yyvsp-1].slots, yyvs[yyvsp-1].decls, False, False, False)

    if yyn == 34 :
#line 169 "CMDgram.y"

        yyval = ObjectDeclNode(yyvs[yyvsp-5], yyvs[yyvsp-3], yyvs[yyvsp-1], yyvs[yyvsp-2], None, None, False, False, False)

    if yyn == 35 :
#line 171 "CMDgram.y"

        yyval = ObjectDeclNode(yyvs[yyvsp-10], yyvs[yyvsp-7], yyvs[yyvsp-4], yyvs[yyvsp-5], yyvs[yyvsp-1].slots, yyvs[yyvsp-1].decls, False, True, False)

    if yyn == 36 :
#line 173 "CMDgram.y"

        yyval = ObjectDeclNode(yyvs[yyvsp-7], yyvs[yyvsp-4], yyvs[yyvsp-1], yyvs[yyvsp-2], None, None, False, True, False)

    if yyn == 37 :
#line 175 "CMDgram.y"

        yyval = ObjectDeclNode(yyvs[yyvsp-8], yyvs[yyvsp-6], yyvs[yyvsp-4], yyvs[yyvsp-5], yyvs[yyvsp-1].slots, yyvs[yyvsp-1].decls, False, False, True)

    if yyn == 38 :
#line 177 "CMDgram.y"

        yyval = ObjectDeclNode(yyvs[yyvsp-5], yyvs[yyvsp-3], yyvs[yyvsp-1], yyvs[yyvsp-2], None, None, False, False, True)

    if yyn == 39 :
#line 182 "CMDgram.y"

        yyval = None

    if yyn == 40 :
#line 184 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 41 :
#line 189 "CMDgram.y"

        yyval = StrConstNode("", False)

    if yyn == 42 :
#line 191 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 43 :
#line 196 "CMDgram.y"

        yyval = None

    if yyn == 44 :
#line 198 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 45 :
#line 203 "CMDgram.y"

        yyval = ObjectBlockDecl(None, None)

    if yyn == 46 :
#line 205 "CMDgram.y"

        yyval = ObjectBlockDecl(yyvs[yyvsp-0], None)

    if yyn == 47 :
#line 207 "CMDgram.y"

        yyval = ObjectBlockDecl(None, yyvs[yyvsp-0])

    if yyn == 48 :
#line 209 "CMDgram.y"

        yyval = ObjectBlockDecl(yyvs[yyvsp-1], yyvs[yyvsp-0])

    if yyn == 49 :
#line 214 "CMDgram.y"

        yyval = StmtList(yyvs[yyvsp-1])

    if yyn == 50 :
#line 216 "CMDgram.y"

        (yyvs[yyvsp-2]).append(yyvs[yyvsp-1])
        yyval = yyvs[yyvsp-2]

    if yyn == 51 :
#line 222 "CMDgram.y"

        yyval = yyvs[yyvsp-1];

    if yyn == 52 :
#line 224 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 53 :
#line 228 "CMDgram.y"

        yyval = yyvs[yyvsp-1]
        (yyvs[yyvsp-1]).propagate_switch_expr(yyvs[yyvsp-4], False)

    if yyn == 54 :
#line 231 "CMDgram.y"

        yyval = yyvs[yyvsp-1]
        (yyvs[yyvsp-1]).propagate_switch_expr(yyvs[yyvsp-4], True)

    if yyn == 55 :
#line 237 "CMDgram.y"

        yyval = IfStmtNode(yyvs[yyvsp-3], yyvs[yyvsp-2], yyvs[yyvsp-0], None, False)

    if yyn == 56 :
#line 239 "CMDgram.y"

        yyval = IfStmtNode(yyvs[yyvsp-6], yyvs[yyvsp-5], yyvs[yyvsp-3], yyvs[yyvsp-0], False);

    if yyn == 57 :
#line 241 "CMDgram.y"

        yyval = IfStmtNode(yyvs[yyvsp-4], yyvs[yyvsp-3], yyvs[yyvsp-1], yyvs[yyvsp-0], True)

    if yyn == 58 :
#line 246 "CMDgram.y"

        yyval = StmtList(yyvs[yyvsp-0])

    if yyn == 59 :
#line 248 "CMDgram.y"

        (yyvs[yyvsp-2]).append(yyvs[yyvsp-0])
        yyval=yyvs[yyvsp-2]

    if yyn == 60 :
#line 254 "CMDgram.y"

        yyval = IfStmtNode(yyvs[yyvsp-4], yyvs[yyvsp-2], yyvs[yyvsp-0], None, False)

    if yyn == 61 :
#line 256 "CMDgram.y"

        yyval = IfStmtNode(yyvs[yyvsp-6], yyvs[yyvsp-4], yyvs[yyvsp-2], yyvs[yyvsp-0], False)

    if yyn == 62 :
#line 261 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-4], None, yyvs[yyvsp-2], None, yyvs[yyvsp-0], False)

    if yyn == 63 :
#line 263 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-3], None, yyvs[yyvsp-1], None, yyvs[yyvsp-4], True)

    if yyn == 64 :
#line 268 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-8], yyvs[yyvsp-6], yyvs[yyvsp-4], yyvs[yyvsp-2], yyvs[yyvsp-0], False) 

    if yyn == 65 :
#line 270 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-7], yyvs[yyvsp-5], yyvs[yyvsp-3], None, yyvs[yyvsp-0], False)

    if yyn == 66 :
#line 272 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-7], yyvs[yyvsp-5], None, yyvs[yyvsp-2], yyvs[yyvsp-0], False)

    if yyn == 67 :
#line 274 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-6], yyvs[yyvsp-4], None, None, yyvs[yyvsp-0], False)

    if yyn == 68 :
#line 276 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-7], None, yyvs[yyvsp-4], yyvs[yyvsp-2], yyvs[yyvsp-0], False)

    if yyn == 69 :
#line 278 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-6], None, yyvs[yyvsp-3], None, yyvs[yyvsp-0], False) 

    if yyn == 70 :
#line 280 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-6], None, None, yyvs[yyvsp-2], yyvs[yyvsp-0], False)

    if yyn == 71 :
#line 282 "CMDgram.y"

        yyval = LoopStmtNode(yyvs[yyvsp-5], None, None, None, yyvs[yyvsp-0], False)

    if yyn == 72 :
#line 287 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 73 :
#line 292 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 74 :
#line 294 "CMDgram.y"

        yyval = yyvs[yyvsp-1]

    if yyn == 75 :
#line 296 "CMDgram.y"

        yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 76 :
#line 298 "CMDgram.y"

        yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 77 :
#line 300 "CMDgram.y"

        yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 78 :
#line 302 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 79 :
#line 304 "CMDgram.y"

      yyval = FloatBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 80 :
#line 306 "CMDgram.y"

      yyval = FloatBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 81 :
#line 308 "CMDgram.y"

      yyval = FloatBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 82 :
#line 310 "CMDgram.y"

      yyval = FloatBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 83 :
#line 312 "CMDgram.y"

      yyval = FloatUnaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-0])

    if yyn == 84 :
#line 314 "CMDgram.y"

      yyval = TTagDerefNode(yyvs[yyvsp-0])

    if yyn == 85 :
#line 316 "CMDgram.y"

      yyval = TTagExprNode(yyvs[yyvsp-0])

    if yyn == 86 :
#line 318 "CMDgram.y"

      yyval = ConditionalExprNode(yyvs[yyvsp-4], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 87 :
#line 320 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 88 :
#line 322 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 89 :
#line 324 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 90 :
#line 326 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 91 :
#line 328 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 92 :
#line 330 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 93 :
#line 332 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 94 :
#line 334 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 95 :
#line 336 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 96 :
#line 338 "CMDgram.y"

      yyval = IntBinaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 97 :
#line 340 "CMDgram.y"

      yyval = StreqExprNode(yyvs[yyvsp-2], yyvs[yyvsp-0], True)

    if yyn == 98 :
#line 342 "CMDgram.y"

      yyval = StreqExprNode(yyvs[yyvsp-2], yyvs[yyvsp-0], False)

    if yyn == 99 :
#line 344 "CMDgram.y"

      yyval = StrcatExprNode(yyvs[yyvsp-2], yyvs[yyvsp-0], yyvs[yyvsp-1])

    if yyn == 100 :
#line 346 "CMDgram.y"

      yyval = IntUnaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-0])

    if yyn == 101 :
#line 348 "CMDgram.y"

      yyval = IntUnaryExprNode(yyvs[yyvsp-1], yyvs[yyvsp-0])

    if yyn == 102 :
#line 350 "CMDgram.y"

      yyval = StrConstNode(yyvs[yyvsp-0], True)

    if yyn == 103 :
#line 352 "CMDgram.y"

      yyval = FloatNode(yyvs[yyvsp-0])

    if yyn == 104 :
#line 354 "CMDgram.y"

      yyval = IntNode(yyvs[yyvsp-0])

    if yyn == 105 :
#line 356 "CMDgram.y"

      yyval = ConstantNode("break")

    if yyn == 106 :
#line 358 "CMDgram.y"

      yyval = SlotAccessNode(yyvs[yyvsp-0].object_expr, yyvs[yyvsp-0].array, yyvs[yyvsp-0].slot_name)

    if yyn == 107 :
#line 360 "CMDgram.y"

      yyval = InternalSlotAccessNode(yyvs[yyvsp-0].object_expr, yyvs[yyvsp-0].slot_expr, yyvs[yyvsp-0].recurse)

    if yyn == 108 :
#line 362 "CMDgram.y"

      yyval = ConstantNode(yyvs[yyvsp-0])

    if yyn == 109 :
#line 364 "CMDgram.y"

      yyval = StrConstNode(yyvs[yyvsp-0], False)

    if yyn == 110 :
#line 366 "CMDgram.y"

      yyval = VarNode(yyvs[yyvsp-0], None)

    if yyn == 111 :
#line 368 "CMDgram.y"

      yyval = VarNode(yyvs[yyvsp-3], yyvs[yyvsp-1])

    if yyn == 112 :
#line 370 "CMDgram.y"

      YYERROR()

    if yyn == 113 :
#line 375 "CMDgram.y"

        yyval = SlotDecl(yyvs[yyvsp-2], yyvs[yyvsp-0], None) 

    if yyn == 114 :
#line 377 "CMDgram.y"

        yyval = SlotDecl(yyvs[yyvsp-5], yyvs[yyvsp-3], yyvs[yyvsp-1])

    if yyn == 115 :
#line 382 "CMDgram.y"

        yyval = InternalSlotDecl(yyvs[yyvsp-2], yyvs[yyvsp-0], False)

    if yyn == 116 :
#line 384 "CMDgram.y"

        yyval = InternalSlotDecl(yyvs[yyvsp-2], yyvs[yyvsp-0], True)

    if yyn == 117 :
#line 389 "CMDgram.y"

        yyval = ConstantNode(yyvs[yyvsp-0])

    if yyn == 118 :
#line 391 "CMDgram.y"

        yyval = yyvs[yyvsp-1]

    if yyn == 119 :
#line 396 "CMDgram.y"

        yyval = AssignDecl('+', FloatNode(1))

    if yyn == 120 :
#line 398 "CMDgram.y"

        yyval = AssignDecl('-', FloatNode(1))

    if yyn == 121 :
#line 400 "CMDgram.y"

        yyval = AssignDecl('+', yyvs[yyvsp-0])

    if yyn == 122 :
#line 402 "CMDgram.y"

        yyval = AssignDecl('-', yyvs[yyvsp-0])

    if yyn == 123 :
#line 404 "CMDgram.y"

        yyval = AssignDecl('*', yyvs[yyvsp-0])

    if yyn == 124 :
#line 406 "CMDgram.y"

        yyval = AssignDecl('/', yyvs[yyvsp-0])

    if yyn == 125 :
#line 408 "CMDgram.y"

        yyval = AssignDecl('%', yyvs[yyvsp-0])

    if yyn == 126 :
#line 410 "CMDgram.y"

        yyval = AssignDecl('&', yyvs[yyvsp-0])

    if yyn == 127 :
#line 412 "CMDgram.y"

        yyval = AssignDecl('^', yyvs[yyvsp-0])

    if yyn == 128 :
#line 414 "CMDgram.y"

        yyval = AssignDecl('|', yyvs[yyvsp-0])

    if yyn == 129 :
#line 416 "CMDgram.y"

        yyval = AssignDecl(opSHL, yyvs[yyvsp-0])

    if yyn == 130 :
#line 418 "CMDgram.y"

        yyval = AssignDecl(opSHR, yyvs[yyvsp-0])

    if yyn == 131 :
#line 423 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 132 :
#line 425 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 133 :
#line 427 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 134 :
#line 429 "CMDgram.y"

        yyval = AssignExprNode(yyvs[yyvsp-2], None, yyvs[yyvsp-0])

    if yyn == 135 :
#line 431 "CMDgram.y"

        yyval = AssignExprNode(yyvs[yyvsp-5], yyvs[yyvsp-3], yyvs[yyvsp-0])

    if yyn == 136 :
#line 433 "CMDgram.y"

        yyval = AssignOpExprNode(yyvs[yyvsp-1], None, yyvs[yyvsp-0].expr, yyvs[yyvsp-0].token)

    if yyn == 137 :
#line 435 "CMDgram.y"

        yyval = AssignOpExprNode(yyvs[yyvsp-4], yyvs[yyvsp-2], yyvs[yyvsp-0].expr, yyvs[yyvsp-0].token)

    if yyn == 138 :
#line 437 "CMDgram.y"

        yyval = SlotAssignOpNode(yyvs[yyvsp-1].object_expr, yyvs[yyvsp-1].slot_name, yyvs[yyvsp-1].array, yyvs[yyvsp-0].token, yyvs[yyvsp-0].expr)

    if yyn == 139 :
#line 439 "CMDgram.y"

        yyval = SlotAssignNode(yyvs[yyvsp-2].object_expr, yyvs[yyvsp-2].array, yyvs[yyvsp-2].slot_name, yyvs[yyvsp-0])

    if yyn == 140 :
#line 441 "CMDgram.y"

        yyval = SlotAssignNode(yyvs[yyvsp-4].object_expr, yyvs[yyvsp-4].array, yyvs[yyvsp-4].slot_naame, yyvs[yyvsp-1])

    if yyn == 141 :
#line 446 "CMDgram.y"

        yyval = FuncCallExprNode(yyvs[yyvsp-3], None, yyvs[yyvsp-1], False)

    if yyn == 142 :
#line 448 "CMDgram.y"

        yyval = FuncCallExprNode(yyvs[yyvsp-3], yyvs[yyvsp-5], yyvs[yyvsp-1], False)

    if yyn == 143 :
#line 450 "CMDgram.y"

        stmt_list = StmtList(yyvs[yyvsp-5], yyvs[yyvsp-1])
        yyval = FuncCallExprNode(yyvs[yyvsp-3], None, stmt_list, True);

    if yyn == 144 :
#line 456 "CMDgram.y"

        yyval = AssertCallExprNode( yyvs[yyvsp-1], None )

    if yyn == 145 :
#line 458 "CMDgram.y"

        yyval = AssertCallExprNode( yyvs[yyvsp-3], yyvs[yyvsp-1] )

    if yyn == 146 :
#line 463 "CMDgram.y"

        yyval = StmtList()

    if yyn == 147 :
#line 466 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 148 :
#line 471 "CMDgram.y"

        yyval = StmtList(yyvs[yyvsp-0])

    if yyn == 149 :
#line 473 "CMDgram.y"

        (yyvs[yyvsp-2]).append(yyvs[yyvsp-0])
        yyval = yyvs[yyvsp-2]

    if yyn == 150 :
#line 479 "CMDgram.y"

        yyval = StmtList(yyvs[yyvsp-0])

    if yyn == 151 :
#line 481 "CMDgram.y"

        (yyvs[yyvsp-1]).append(yyvs[yyvsp-0])
        yyval = yyvs[yyvsp-1]

    if yyn == 152 :
#line 487 "CMDgram.y"

        yyval = SlotAssignNode(None, None, yyvs[yyvsp-3], yyvs[yyvsp-1])

    if yyn == 153 :
#line 489 "CMDgram.y"

        yyval = SlotAssignNode(None, None, yyvs[yyvsp-3], yyvs[yyvsp-1], yyvs[yyvsp-4])

    if yyn == 154 :
#line 491 "CMDgram.y"

        yyval = SlotAssignNode(None, None, "datablock", yyvs[yyvsp-1])

    if yyn == 155 :
#line 493 "CMDgram.y"

        yyval = SlotAssignNode(None, yyvs[yyvsp-4], yyvs[yyvsp-6], yyvs[yyvsp-1])

    if yyn == 156 :
#line 495 "CMDgram.y"

        yyval = SlotAssignNode(None, yyvs[yyvsp-4], yyvs[yyvsp-6], yyvs[yyvsp-1], yyvs[yyvsp-7])

    if yyn == 157 :
#line 500 "CMDgram.y"

        yyval = yyvs[yyvsp-0]

    if yyn == 158 :
#line 502 "CMDgram.y"

        yyval = CommaCatExprNode(yyvs[yyvsp-2], yyvs[yyvsp-0])

    if yyn == 159 :
#line 507 "CMDgram.y"

        ill_tok = ExprNode()
        ill_tok.token = yyvs[yyvsp-0]
        yyval = StmtList(ill_tok)

    if yyn == 160 :
#line 511 "CMDgram.y"

        ill_tok = ExprNode()
        ill_tok.token = yyvs[yyvsp-2]
        (yyvs[yyvsp-3]).append(ill_tok)
        yyval = yyvs[yyvsp-3]

#line 2259 "y.tab.py"
    # switch
    yyssp -= yym
    if yym:
      yyss[-yym:] = [0]*yym
    yystate = yyss[yyssp]
    yyvsp -= yym
    if yym:
      yyvs[-yym:] = [None]*yym
    yym = yylhs[yyn]
    if yystate == 0 and yym == 0 :
      if yydebug :
        print 'yydebug: after reduction, shifting from state 0 to (final) state ', YYFINAL
      yystate = YYFINAL
      yyssp+=1
      #yyss.append( YYFINAL )
      yyss[yyssp] = YYFINAL 
      yyvsp+=1
      #yyvs.append( yyval )
      yyvs[yyvsp] = yyval
      if yychar < 0 :
        (yychar, yylval) = yylex()
        if type( yychar ) is types.StringType :
          yychar = ord( yychar )
        if yychar < 0 :
          yychar = 0
        if yydebug :
          print 'yydebug: state (final) ', YYFINAL, 'reading ', yychar
      if yychar == 0:
        return(0)
      continue
    yyn = yygindex[yym]
    if yyn :
      if type( yyn ) is types.StringType: 
        yystate = ord(yystate)
      yyn = yyn + yystate
      if yyn >= 0 and yyn <= (len(yycheck)-1) and yycheck[yyn] == yystate :
        yystate = yytable[yyn]
      else :
        yystate = yydgoto[yym]
    else :
      yystate = yydgoto[yym]
    if yydebug :
      print 'yydebug: after reduction, shifting from state ', yyss[yyssp], ' to state ', yystate
    yyssp+=1
    #yyss.append( yystate )
    yyss[yyssp] = yystate
    yyvsp+=1
    #yyvs.append( yyval )
    yyvs[yyvsp] = yyval
  # yyloop
# yyparse
#line 519 "CMDgram.y"

#line 2313 "y.tab.py"
